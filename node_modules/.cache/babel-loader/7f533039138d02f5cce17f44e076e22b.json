{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\components\\\\pages\\\\login\\\\login.js\";\nimport React, { Component, useState } from 'react';\nimport './login.css';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Login = props => {\n  const [username, setusername] = useState('');\n  const [password, setpassword] = useState('');\n  const [errors, seterrors] = useState('');\n  const [showerror, setshowerror] = useState('none');\n  const [recaptcha, setRecaptcha] = useState('');\n  const [check, setcheck] = useState(false);\n\n  const pass = event => {\n    setpassword(event.target.value);\n  };\n\n  const mail = event => {\n    setusername(event.target.value);\n  };\n\n  const recaptchastate = () => {\n    setRecaptcha(true);\n  };\n\n  const gohome = () => {\n    props.history.push('/');\n  };\n\n  const goregister = () => {\n    props.history.push('/register');\n  };\n\n  const checkBox = () => {\n    setcheck(!check);\n  };\n\n  const ctoken = () => {} // const header = new Headers();\n  // header.append('Access-Control-Allow-Origin', '*');\n  // let webApiUrl = 'http://localhost:3000/auth/login/token';\n  // const headers ='jjjj'\n  // axios.post(webApiUrl,headers,{\n  // });\n  // axios.post(\n  //   'http://localhost:3000/auth/login/token',\n  //   {headers: {\n  //       \"name\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNWVlNzdhMTJjNjJiYTcyZjRjNWE5YzAyIn0sImlhdCI6MTU5MjMxOTg1MSwiZXhwIjoxNTkyMzIzNDUxfQ.ScEuMIFlkK2rxfBXUE6movCNJDMJsaEQdJgyn3DHtY8\"\n  //     }\n  //   }\n  // )\n  // .then((response) => {\n  //     var response = response.data;\n  //   },\n  //   (error) => {\n  //     var status = error.response.status\n  //   }\n  // const myHeaders = new Headers();\n  // myHeaders.append('Authorization', '1234abcd');\n  // fetch('http://localhost:3000/auth/login/token',{\n  //   method:'POST',\n  //   headers:{\n  //     'Accept':'application/json',\n  //     'Content-Type': 'application/x-www-form-urlencoded',\n  //     'headers':myHeaders\n  //   },\n  // body:JSON.stringify(\n  // {\n  //     email:username,\n  //      password:password,\n  //      check:check\n  //   }\n  //  )\n  // }) \n  // .then(async (response)=>{\n  // const data = await response.json();\n  // const statuse=await response.status;\n  //  }\n  ;\n\n  const login = props => {\n    let err = [];\n\n    if (username.length < 1 || password.length < 1) {\n      err.push(\"لطفا همه فیلد ها را پر کنید\");\n      setshowerror('flex');\n      seterrors(err);\n    } else if (password.length < 5) {\n      err.push(\"تعداد ارقام پسورد حداقل پنج رقم می باشد\");\n      setshowerror('flex');\n      seterrors(err);\n    } else if (username.indexOf('@') == -1 || username.indexOf('.') == -1) {\n      err.push(\"فرمت ایمیل معتبر نمی باشد\");\n      setshowerror('flex');\n      seterrors(err);\n    } else if (recaptcha == false) {\n      err.push(\"گزینه امنتی را فعال کنید\");\n      seterrors(err);\n    } else {\n      seterrors('');\n      setshowerror('none');\n      return fetch('http://localhost:3000/auth/login', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: JSON.stringify({\n          email: username,\n          password: password,\n          check: check\n        })\n      }).then(async response => {\n        const data = await response.json();\n        const statuse = await response.status;\n\n        if (statuse == 200) {\n          console.log(data, 'hgggggg');\n          localStorage.setItem('admin', data.admin); // gohome()\n\n          setshowerror('none');\n        } else if (statuse == 400) {\n          seterrors(data.message);\n          setshowerror('flex');\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"mainlogin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"error\",\n    style: {\n      display: errors.length < 1 ? 'none' : ''\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, errors), React.createElement(Link, {\n    onClick: ctoken,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"kkk\"), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\",\n    onChange: mail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"\\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631\",\n    onChange: pass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"recaptcha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(ReCAPTCHA, {\n    hl: \"fa\",\n    sitekey: \"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\",\n    onChange: recaptchastate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"remember\",\n    onChange: checkBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"\\u0648\\u0631\\u0648\\u062F\"), React.createElement(\"div\", {\n    className: \"cl\",\n    style: {\n      display: 'flex',\n      justifyContent: 'spacebetween'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: './reset',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"\\u0641\\u0631\\u0627\\u0645\\u0648\\u0634\\u06CC \\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631\"), React.createElement(\"text\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"\\u06A9\\u0627\\u0631\\u0628\\u0631 \\u062C\\u062F\\u06CC\\u062F \\u0647\\u0633\\u062A\\u06CC\\u062F\", React.createElement(Link, {\n    onClick: goregister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"\\u062B\\u0628\\u062A \\u0646\\u0627\\u0645 \\u06A9\\u0646\\u06CC\\u062F\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/components/pages/login/login.js"],"names":["React","Component","useState","ReCAPTCHA","Link","axios","Login","props","username","setusername","password","setpassword","errors","seterrors","showerror","setshowerror","recaptcha","setRecaptcha","check","setcheck","pass","event","target","value","mail","recaptchastate","gohome","history","push","goregister","checkBox","ctoken","login","err","length","indexOf","fetch","method","headers","body","JSON","stringify","email","then","response","data","json","statuse","status","console","log","localStorage","setItem","admin","message","catch","error","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component,useState } from 'react'\r\nimport './login.css';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nconst Login=(props)=>{\r\n    const [username, setusername] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [errors, seterrors] = useState('');\r\n    const [showerror,setshowerror]=useState('none')\r\n    const [recaptcha,setRecaptcha]=useState('');\r\n    const [check,setcheck]=useState(false);\r\n    const pass=(event)=>{\r\n        setpassword(event.target.value)\r\n    }\r\n    const mail=(event)=>{\r\n        setusername(event.target.value)\r\n    }\r\n    const recaptchastate=()=>{\r\n      setRecaptcha(true)\r\n     }\r\n     const gohome=()=>{\r\n \r\n      props.history.push('/');\r\n         }\r\n        const goregister=()=>{\r\n          props.history.push('/register');\r\n        }\r\n       const checkBox=()=>{\r\n        setcheck(!check)\r\n       }\r\n     const ctoken=()=>{\r\n      // const header = new Headers();\r\n      // header.append('Access-Control-Allow-Origin', '*');\r\n      // let webApiUrl = 'http://localhost:3000/auth/login/token';\r\n      // const headers ='jjjj'\r\n      // axios.post(webApiUrl,headers,{\r\n\r\n      // });\r\n      // axios.post(\r\n      //   'http://localhost:3000/auth/login/token',\r\n      //   {headers: {\r\n      //       \"name\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNWVlNzdhMTJjNjJiYTcyZjRjNWE5YzAyIn0sImlhdCI6MTU5MjMxOTg1MSwiZXhwIjoxNTkyMzIzNDUxfQ.ScEuMIFlkK2rxfBXUE6movCNJDMJsaEQdJgyn3DHtY8\"\r\n      //     }\r\n      //   }\r\n      // )\r\n      // .then((response) => {\r\n      //     var response = response.data;\r\n      //   },\r\n      //   (error) => {\r\n      //     var status = error.response.status\r\n      //   }\r\n      }\r\n \r\n      // const myHeaders = new Headers();\r\n      // myHeaders.append('Authorization', '1234abcd');\r\n      // fetch('http://localhost:3000/auth/login/token',{\r\n      //   method:'POST',\r\n      //   headers:{\r\n      //     'Accept':'application/json',\r\n      //     'Content-Type': 'application/x-www-form-urlencoded',\r\n      //     'headers':myHeaders\r\n      //   },\r\n        // body:JSON.stringify(\r\n        // {\r\n        //     email:username,\r\n        //      password:password,\r\n        //      check:check\r\n        //   }\r\n        //  )\r\n      // }) \r\n        // .then(async (response)=>{\r\n        // const data = await response.json();\r\n        // const statuse=await response.status;\r\n    //  }\r\n    const login=(props)=>{\r\n        let err=[];\r\n        if(username.length<1 || password.length<1){\r\n   err.push(\"لطفا همه فیلد ها را پر کنید\");\r\n   setshowerror('flex')\r\nseterrors(err)\r\n        }else if(password.length<5){\r\n          err.push(\"تعداد ارقام پسورد حداقل پنج رقم می باشد\");\r\n          setshowerror('flex')\r\n          seterrors(err)\r\n        }else if(username.indexOf('@')== -1 || username.indexOf('.')== -1){\r\n          err.push(\"فرمت ایمیل معتبر نمی باشد\");\r\n          setshowerror('flex')\r\n          seterrors(err)\r\n        }\r\n        else if(recaptcha == false){\r\n         err.push(\"گزینه امنتی را فعال کنید\");\r\n         seterrors(err)\r\n       }\r\n       else{\r\n        seterrors('')\r\n        setshowerror('none')\r\n        return(\r\n            fetch('http://localhost:3000/auth/login',{\r\n                     method:'POST',\r\n                     headers:{\r\n                       'Accept':'application/json',\r\n                       'Content-Type': 'application/x-www-form-urlencoded'\r\n                     },\r\n                     body:JSON.stringify(\r\n                     {\r\n                         email:username,\r\n                          password:password,\r\n                          check:check\r\n                       }\r\n                      )\r\n                   })   .then(async (response)=>{\r\n                     const data = await response.json();\r\n                     const statuse=await response.status;\r\n                   if(statuse == 200){\r\n                     console.log(data,'hgggggg')\r\n                     localStorage.setItem('admin', data.admin);\r\n                  // gohome()\r\n                  setshowerror('none')\r\n                   }else if(statuse == 400){\r\n                    seterrors(data.message)\r\n                    setshowerror('flex')\r\n                   }\r\n                   }\r\n                  )\r\n                   .catch((error)=>{console.error(error)})\r\n                   )\r\n                }\r\n    }\r\n    return(\r\n        <div className=\"mainlogin\">\r\n<div className=\"error\" style={{display:errors.length<1?'none':'',}}>\r\n{errors}\r\n\r\n</div>\r\n<Link onClick={ctoken}>kkk</Link>\r\n     <input type=\"email\" placeholder=\"ایمیل\" onChange={mail} />\r\n    <input type=\"password\" placeholder=\"رمز عبور\" onChange={pass} />\r\n    <div className=\"recaptcha\">\r\n    <ReCAPTCHA\r\n    hl={\"fa\"}\r\n    sitekey=\"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\"\r\n    onChange={recaptchastate}\r\n  />\r\n </div>\r\n <div className=\"checkbox\">\r\n   {/* <text>مرا به خاطر بسپار</text> */}\r\n <input type=\"checkbox\" name=\"remember\" onChange={checkBox} />\r\n </div>\r\n<button onClick={login}>\r\n  ورود\r\n</button>\r\n  <div className=\"cl\" style={{display:'flex',justifyContent:'spacebetween'}}>\r\n    <Link to={'./reset'}>فراموشی رمز عبور</Link>\r\n    <text >کاربر جدید هستید<Link onClick={goregister}>ثبت نام کنید</Link></text>\r\n  </div>\r\n   \r\n        </div>\r\n    )\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}