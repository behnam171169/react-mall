{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\components\\\\pages\\\\customerdetail\\\\customerdetail.js\";\nimport React, { Component, useState, useContext, useEffect } from 'react';\nimport './customerdetail.css';\nimport { mainContext } from './../../../context/mainContext';\nimport { IconContext } from \"react-icons\";\nimport { FaCaretUp, FaSortDown } from \"react-icons/fa\";\nimport Towns from './../../pages/towns/towns';\nimport City from './../citys/city';\nimport mapboxgl, { LngLat } from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';\n\nvar MapboxLanguage = require('@mapbox/mapbox-gl-language'); // import mapboxgl from 'mapbox-gl'\n\n\nconst Customerdetail = props => {\n  const [lngLat, setLngLat] = useState([]);\n  console.log(lngLat, 'uuuyyy');\n  useEffect(() => {\n    mapboxgl.accessToken = 'pk.eyJ1IjoiYmVobmFtMTciLCJhIjoiY2ticzRoNWNjMDAyZTJ5bDU5OWpiZ3B3diJ9.BDs34GTjlq6M3trXe40xvQ';\n    var coordinates = document.getElementById('coordinates'); // mapboxgl.setRTLTextPlugin(\n    //   'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js',\n    //   null,\n    //   true // Lazy load the plugin,\n    //   );\n    //     mapboxgl.setRTLTextPlugin('https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.1.0/mapbox-gl-rtl-text.js',null,true);\n    // var mapboxLanguage = new MapboxLanguage({\n    // defaultLanguage: 'ur'\n    // });\n\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v11',\n      // stylesheet location\n      center: [-74.5, 40],\n      // starting position [lng, lat]\n      zoom: 14 // starting zoom\n\n    }); // mapboxgl.setRTLTextPlugin('https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.1.0/mapbox-gl-rtl-text.js');\n    // map.addControl(new MapboxLanguage({\n    //   defaultLanguage: 'ar'\n    // }));\n    // var map = new mapboxgl.Map({\n    //   container: 'map',\n    //   style: 'mapbox://styles/mapbox/light-v10',\n    //   center: [-77.04, 38.907],\n    //   zoom: 11.15,\n    //   attributionControl: false\n    //   });\n    //   map.addControl(new mapboxgl.AttributionControl(), 'top-left');\n\n    map.addControl(new MapboxGeocoder({\n      accessToken: mapboxgl.accessToken\n    }));\n    map.addControl(new mapboxgl.GeolocateControl({\n      positionOptions: {\n        enableHighAccuracy: true\n      },\n      trackUserLocation: true\n    })); //   var marker = new mapboxgl.Marker({\n    //     draggable: true\n    // })\n    //     .setLngLat([46.55308235230018, 55.665957])\n    //     .addTo(map);\n    // ng\":46.55885341105318,\"lat\":33.76062300801668\n\n    map.on('click', function (e) {\n      console.log(e);\n      var lng = JSON.stringify(e.lngLat.wrap());\n      setLngLat(lng);\n      var _lat = e.lngLat.lat;\n      var _lng = e.lngLat.lng;\n      marker.setLngLat([_lng, _lat]);\n    }); // marker.on('dragend', onDragEnd);\n    // map.on('click', function(e) {\n    //   var lng=JSON.stringify(e.lngLat.wrap());\n    //   setLngLat(lng)\n    //   });\n    // map.addControl(mapboxLanguage);\n    // var language = new MapboxLanguage();\n    // map.addControl(language);\n    // const geocoder = new MapboxGeocoder({\n    //   accessToken: mapboxgl.accessToken,\n    //   mapboxgl: mapboxgl\n    // });\n  }, []);\n  const {\n    customertowns,\n    customercity,\n    showtown,\n    towns,\n    showcity,\n    citys\n  } = useContext(mainContext);\n  const [drop, setdrop] = useState('Dropdown'); // const[showtown,setshowtown]=useState(false);\n\n  const nametown = text => {\n    towns(text);\n  };\n\n  const namecity = text => {\n    citys(text);\n  };\n\n  return React.createElement(\"div\", {\n    id: \"map\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  });\n};\n\nexport default Customerdetail;","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/components/pages/customerdetail/customerdetail.js"],"names":["React","Component","useState","useContext","useEffect","mainContext","IconContext","FaCaretUp","FaSortDown","Towns","City","mapboxgl","LngLat","MapboxGeocoder","MapboxLanguage","require","Customerdetail","props","lngLat","setLngLat","console","log","accessToken","coordinates","document","getElementById","map","Map","container","style","center","zoom","addControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","on","e","lng","JSON","stringify","wrap","_lat","lat","_lng","marker","customertowns","customercity","showtown","towns","showcity","citys","drop","setdrop","nametown","text","namecity"],"mappings":"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","sourcesContent":["import React, { Component ,useState,useContext,useEffect} from 'react';\r\nimport './customerdetail.css';\r\nimport {mainContext} from './../../../context/mainContext';\r\nimport { IconContext } from \"react-icons\";\r\nimport { FaCaretUp,FaSortDown } from \"react-icons/fa\";\r\nimport Towns from './../../pages/towns/towns';\r\nimport City from './../citys/city';\r\n\r\nimport mapboxgl, { LngLat } from 'mapbox-gl'\r\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\r\nimport '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';\r\nvar MapboxLanguage = require('@mapbox/mapbox-gl-language');\r\n\r\n  \r\n  \r\n// import mapboxgl from 'mapbox-gl'\r\nconst Customerdetail=(props)=>{\r\n  const[lngLat,setLngLat]=useState([]);\r\n  console.log(lngLat,'uuuyyy')\r\n  useEffect(()=>{\r\n    mapboxgl.accessToken = 'pk.eyJ1IjoiYmVobmFtMTciLCJhIjoiY2ticzRoNWNjMDAyZTJ5bDU5OWpiZ3B3diJ9.BDs34GTjlq6M3trXe40xvQ';\r\n    var coordinates = document.getElementById('coordinates');\r\n    // mapboxgl.setRTLTextPlugin(\r\n    //   'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js',\r\n    //   null,\r\n    //   true // Lazy load the plugin,\r\n      \r\n    //   );\r\n//     mapboxgl.setRTLTextPlugin('https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.1.0/mapbox-gl-rtl-text.js',null,true);\r\n// var mapboxLanguage = new MapboxLanguage({\r\n// defaultLanguage: 'ur'\r\n// });\r\n\r\n\r\n    var map = new mapboxgl.Map({\r\ncontainer: 'map',\r\nstyle: 'mapbox://styles/mapbox/streets-v11', // stylesheet location\r\ncenter: [-74.5, 40], // starting position [lng, lat]\r\nzoom: 14 // starting zoom\r\n});\r\n// mapboxgl.setRTLTextPlugin('https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.1.0/mapbox-gl-rtl-text.js');\r\n// map.addControl(new MapboxLanguage({\r\n//   defaultLanguage: 'ar'\r\n// }));\r\n\r\n// var map = new mapboxgl.Map({\r\n//   container: 'map',\r\n//   style: 'mapbox://styles/mapbox/light-v10',\r\n//   center: [-77.04, 38.907],\r\n//   zoom: 11.15,\r\n//   attributionControl: false\r\n//   });\r\n//   map.addControl(new mapboxgl.AttributionControl(), 'top-left');\r\n\r\nmap.addControl(new MapboxGeocoder({       accessToken: mapboxgl.accessToken   })); \r\nmap.addControl(\r\n  new mapboxgl.GeolocateControl({\r\n  positionOptions: {\r\n  enableHighAccuracy: true\r\n  },\r\n  trackUserLocation: true\r\n  })\r\n  );\r\n \r\n//   var marker = new mapboxgl.Marker({\r\n\r\n//     draggable: true\r\n// })\r\n//     .setLngLat([46.55308235230018, 55.665957])\r\n//     .addTo(map);\r\n\r\n// ng\":46.55885341105318,\"lat\":33.76062300801668\r\nmap.on('click', function(e){\r\n    console.log(e)\r\n      var lng=JSON.stringify(e.lngLat.wrap());\r\n    setLngLat(lng)\r\n    var _lat = e.lngLat.lat;\r\n    var _lng = e.lngLat.lng;\r\n   marker.setLngLat([_lng, _lat]);\r\n  \r\n})\r\n   \r\n  // marker.on('dragend', onDragEnd);\r\n  \r\n  // map.on('click', function(e) {\r\n  //   var lng=JSON.stringify(e.lngLat.wrap());\r\n  //   setLngLat(lng)\r\n   \r\n  //   });\r\n\r\n// map.addControl(mapboxLanguage);\r\n// var language = new MapboxLanguage();\r\n// map.addControl(language);\r\n\r\n// const geocoder = new MapboxGeocoder({\r\n//   accessToken: mapboxgl.accessToken,\r\n//   mapboxgl: mapboxgl\r\n// });\r\n\r\n  },[])\r\n    const {customertowns,customercity,showtown,towns,showcity,citys}=useContext(mainContext)\r\n    const [drop,setdrop]=useState('Dropdown');\r\n    // const[showtown,setshowtown]=useState(false);\r\n   const nametown=(text)=>{\r\n    towns(text)\r\n   }\r\n   const namecity=(text)=>{\r\n    citys(text)\r\n   }\r\n   \r\n    return(\r\n\r\n      <div id=\"map\"></div>\r\n\r\n    )\r\n}\r\nexport default Customerdetail;"]},"metadata":{},"sourceType":"module"}