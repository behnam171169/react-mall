{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\components\\\\pages\\\\customerdetail\\\\customerdetail.js\";\nimport React, { Component, useState, useContext, useEffect } from 'react';\nimport './customerdetail.css';\nimport { mainContext } from './../../../context/mainContext';\nimport { IconContext } from \"react-icons\";\nimport { FaCaretUp, FaSortDown } from \"react-icons/fa\";\nimport Towns from './../../pages/towns/towns';\nimport City from './../citys/city';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n\nvar mapboxgl = require('mapbox-gl/dist/mapbox-gl.js'); // import mapboxgl from 'mapbox-gl'\n\n\nconst Customerdetail = props => {\n  useEffect(() => {\n    mapboxgl.accessToken = 'pk.eyJ1IjoiYmVobmFtMTciLCJhIjoiY2ticzRoNWNjMDAyZTJ5bDU5OWpiZ3B3diJ9.BDs34GTjlq6M3trXe40xvQ';\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v11'\n    });\n    map.addControl(new MapboxGeocoder({\n      accessToken: mapboxgl.accessToken\n    }));\n    mapboxgl.setRTLTextPlugin('https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.1.0/mapbox-gl-rtl-text.js');\n    var mapboxLanguage = new MapboxLanguage({\n      defaultLanguage: 'en'\n    });\n    map.setLayoutProperty('country-label', 'text-field', ['get', 'name_fr']);\n  }, []);\n  const {\n    customertowns,\n    customercity,\n    showtown,\n    towns,\n    showcity,\n    citys\n  } = useContext(mainContext);\n  const [drop, setdrop] = useState('Dropdown'); // const[showtown,setshowtown]=useState(false);\n\n  const nametown = text => {\n    towns(text);\n  };\n\n  const namecity = text => {\n    citys(text);\n  };\n\n  return React.createElement(\"div\", {\n    id: \"map\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  });\n};\n\nexport default Customerdetail;","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/components/pages/customerdetail/customerdetail.js"],"names":["React","Component","useState","useContext","useEffect","mainContext","IconContext","FaCaretUp","FaSortDown","Towns","City","MapboxGeocoder","mapboxgl","require","Customerdetail","props","accessToken","map","Map","container","style","addControl","setRTLTextPlugin","mapboxLanguage","MapboxLanguage","defaultLanguage","setLayoutProperty","customertowns","customercity","showtown","towns","showcity","citys","drop","setdrop","nametown","text","namecity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAoCC,UAApC,EAA+CC,SAA/C,QAA+D,OAA/D;AACA,OAAO,sBAAP;AACA,SAAQC,WAAR,QAA0B,gCAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,EAAmBC,UAAnB,QAAqC,gBAArC;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,6BAAD,CAAtB,C,CACA;;;AACA,MAAMC,cAAc,GAAEC,KAAD,IAAS;AAC1BX,EAAAA,SAAS,CAAC,MAAM;AAEZQ,IAAAA,QAAQ,CAACI,WAAT,GAAuB,4FAAvB;AACA,QAAIC,GAAG,GAAG,IAAIL,QAAQ,CAACM,GAAb,CAAiB;AAC3BC,MAAAA,SAAS,EAAE,KADgB;AAE3BC,MAAAA,KAAK,EAAE;AAFoB,KAAjB,CAAV;AAIAH,IAAAA,GAAG,CAACI,UAAJ,CAAe,IAAIV,cAAJ,CAAmB;AAAQK,MAAAA,WAAW,EAAEJ,QAAQ,CAACI;AAA9B,KAAnB,CAAf;AACAJ,IAAAA,QAAQ,CAACU,gBAAT,CAA0B,6FAA1B;AACA,QAAIC,cAAc,GAAG,IAAIC,cAAJ,CAAmB;AACxCC,MAAAA,eAAe,EAAE;AADuB,KAAnB,CAArB;AAKAR,IAAAA,GAAG,CAACS,iBAAJ,CAAsB,eAAtB,EAAuC,YAAvC,EAAqD,CAAC,KAAD,EAAO,SAAP,CAArD;AACH,GAfQ,EAeN,EAfM,CAAT;AAgBA,QAAM;AAACC,IAAAA,aAAD;AAAeC,IAAAA,YAAf;AAA4BC,IAAAA,QAA5B;AAAqCC,IAAAA,KAArC;AAA2CC,IAAAA,QAA3C;AAAoDC,IAAAA;AAApD,MAA2D7B,UAAU,CAACE,WAAD,CAA3E;AAEA,QAAM,CAAC4B,IAAD,EAAMC,OAAN,IAAehC,QAAQ,CAAC,UAAD,CAA7B,CAnB0B,CAoB1B;;AACD,QAAMiC,QAAQ,GAAEC,IAAD,IAAQ;AACtBN,IAAAA,KAAK,CAACM,IAAD,CAAL;AACA,GAFD;;AAGA,QAAMC,QAAQ,GAAED,IAAD,IAAQ;AACtBJ,IAAAA,KAAK,CAACI,IAAD,CAAL;AACA,GAFD;;AAIC,SACG;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AAOH,CAnCD;;AAsCA,eAAetB,cAAf","sourcesContent":["import React, { Component ,useState,useContext,useEffect} from 'react';\r\nimport './customerdetail.css';\r\nimport {mainContext} from './../../../context/mainContext';\r\nimport { IconContext } from \"react-icons\";\r\nimport { FaCaretUp,FaSortDown } from \"react-icons/fa\";\r\nimport Towns from './../../pages/towns/towns';\r\nimport City from './../citys/city';\r\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder'\r\nvar mapboxgl = require('mapbox-gl/dist/mapbox-gl.js');\r\n// import mapboxgl from 'mapbox-gl'\r\nconst Customerdetail=(props)=>{\r\n    useEffect(() => {\r\n       \r\n        mapboxgl.accessToken = 'pk.eyJ1IjoiYmVobmFtMTciLCJhIjoiY2ticzRoNWNjMDAyZTJ5bDU5OWpiZ3B3diJ9.BDs34GTjlq6M3trXe40xvQ';\r\n        var map = new mapboxgl.Map({\r\n        container: 'map',\r\n        style: 'mapbox://styles/mapbox/streets-v11'\r\n        });\r\n        map.addControl(new MapboxGeocoder({       accessToken: mapboxgl.accessToken   })); \r\n        mapboxgl.setRTLTextPlugin('https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.1.0/mapbox-gl-rtl-text.js');\r\n        var mapboxLanguage = new MapboxLanguage({\r\n        defaultLanguage: 'en'\r\n      });\r\n       \r\n       \r\n        map.setLayoutProperty('country-label', 'text-field', ['get','name_fr']);\r\n    }, [])\r\n    const {customertowns,customercity,showtown,towns,showcity,citys}=useContext(mainContext)\r\n   \r\n    const [drop,setdrop]=useState('Dropdown');\r\n    // const[showtown,setshowtown]=useState(false);\r\n   const nametown=(text)=>{\r\n    towns(text)\r\n   }\r\n   const namecity=(text)=>{\r\n    citys(text)\r\n   }\r\n   \r\n    return(\r\n       <div id=\"map\">     \r\n           \r\n       </div>\r\n     \r\n       \r\n    )\r\n}\r\n\r\n\r\nexport default Customerdetail;"]},"metadata":{},"sourceType":"module"}