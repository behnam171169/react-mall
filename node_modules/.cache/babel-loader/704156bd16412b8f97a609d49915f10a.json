{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\components\\\\pages\\\\register\\\\register.js\";\nimport React, { Component, useState } from 'react';\nimport './register.css';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\n\nconst Register = props => {\n  console.log(typeof admin2);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState('');\n  const [recaptcha, setRecaptcha] = useState(false);\n\n  const gohome = () => {\n    props.history.push('/');\n  };\n\n  const gologin = () => {\n    props.history.push('/login');\n  };\n\n  const namesave = event => {\n    setName(event.target.value);\n  };\n\n  const lastnamesave = event => {\n    setName(event.target.value);\n  };\n\n  const emailsave = event => {\n    setEmail(event.target.value);\n  };\n\n  const passwordsave = event => {\n    setPassword(event.target.value);\n  };\n\n  const recaptchastate = () => {\n    setRecaptcha(true);\n  };\n\n  function datasave() {\n    let err = [];\n\n    if (name.length < 1 || email.length < 1) {\n      err.push(\"لطفا همه فیلد ها را پر کنید\");\n      setErrors(err);\n    } else if (password.length < 5) {\n      err.push(\"تعداد ارقام پسورد حداقل پنج رقم می باشد\");\n      setErrors(err);\n    } else if (email.indexOf('@') == -1 || email.indexOf('.') == -1) {\n      err.push(\"فرمت ایمیل معتبر نمی باشد\");\n      setErrors(err);\n    } else if (recaptcha == false) {\n      err.push(\"گزینه امنتی را فعال کنید\");\n      setErrors(err);\n    } else {\n      setErrors('');\n      return fetch('http://localhost:3000/auth/register', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: JSON.stringify({\n          name: name,\n          email: email,\n          password: password\n        })\n      }).then(async response => {\n        const data = await response.json();\n        const status = await response.status;\n        console.log(data, status, 'oo');\n\n        if (status == 200) {\n          localStorage.setItem('user', data.adduser._id);\n          localStorage.setItem('admin', data.adduser.admin);\n          localStorage.setItem('token', data.token);\n          gohome();\n          window.location.reload(true); // console.log(data.adduser.admin,'pp')\n        } else if (status == 400) {\n          setErrors(data.message);\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"mainregister\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"error\",\n    style: {\n      display: errors.length < 1 ? 'none' : ''\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, errors), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"\\u0646\\u0627\\u0645\",\n    onChange: namesave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \" \\u0646\\u0627\\u0645 \\u062E\\u0627\\u0646\\u0648\\u0627\\u062F\\u06AF\\u06CC\",\n    onChange: lastnamesave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"\\u0634\\u0645\\u0627\\u0631\\u0647 \\u0645\\u0648\\u0628\\u0627\\u06CC\\u0644 \\u06CC\\u0627 \\u0627\\u06CC\\u0645\\u06CC\\u0644\",\n    onChange: emailsave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"\\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631\",\n    onChange: passwordsave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"text\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, recaptcha), React.createElement(ReCAPTCHA, {\n    className: \"recaptcha\",\n    hl: \"fa\",\n    sitekey: \"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\",\n    onChange: recaptchastate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: datasave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"\\u062B\\u0628\\u062A \\u0646\\u0627\\u0645\"), React.createElement(\"text\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"\\u0642\\u0628\\u0644\\u0627 \\u062B\\u0628\\u062A \\u0646\\u0627\\u0645 \\u06A9\\u0631\\u062F\\u0647 \\u0627\\u06CC\\u062F\\u061F\", React.createElement(Link, {\n    onClick: gologin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"\\u0648\\u0627\\u0631\\u062F \\u0634\\u0648\\u06CC\\u062F\")));\n};\n\nexport default withRouter(Register);","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/components/pages/register/register.js"],"names":["React","Component","useState","ReCAPTCHA","Link","withRouter","Register","props","console","log","admin2","name","setName","email","setEmail","password","setPassword","errors","setErrors","recaptcha","setRecaptcha","gohome","history","push","gologin","namesave","event","target","value","lastnamesave","emailsave","passwordsave","recaptchastate","datasave","err","length","indexOf","fetch","method","headers","body","JSON","stringify","then","response","data","json","status","localStorage","setItem","adduser","_id","admin","token","window","location","reload","message","catch","error","display"],"mappings":"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","sourcesContent":["import React, { Component,useState } from 'react'\r\nimport './register.css';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { Link } from 'react-router-dom';\r\nimport {withRouter} from 'react-router-dom';\r\nconst Register=(props)=>{\r\n\r\nconsole.log(typeof(admin2))\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n   const [errors,setErrors]=useState('');\r\n   const [recaptcha,setRecaptcha]=useState(false);\r\n   const gohome=()=>{\r\n \r\n    props.history.push('/');\r\n       }\r\n       const gologin=()=>{\r\n        props.history.push('/login');\r\n       }\r\n   const namesave=(event)=>{\r\n    setName(event.target.value)\r\n   }\r\n   const lastnamesave=(event)=>{\r\n    setName(event.target.value)\r\n   }\r\n   const emailsave=(event)=>{\r\n    setEmail(event.target.value)\r\n   }\r\n   const passwordsave=(event)=>{\r\n    setPassword(event.target.value)\r\n   }\r\n   const recaptchastate=()=>{\r\n    setRecaptcha(true)\r\n   }\r\n   function datasave(){\r\n     let err=[];\r\n     if(name.length<1 || email.length<1){\r\nerr.push(\"لطفا همه فیلد ها را پر کنید\");\r\nsetErrors(err)\r\n     }else if(password.length<5){\r\n       err.push(\"تعداد ارقام پسورد حداقل پنج رقم می باشد\");\r\n       setErrors(err)\r\n     }else if(email.indexOf('@')== -1 || email.indexOf('.')== -1){\r\n       err.push(\"فرمت ایمیل معتبر نمی باشد\");\r\n       setErrors(err)\r\n     }else if(recaptcha == false){\r\n      err.push(\"گزینه امنتی را فعال کنید\");\r\n      setErrors(err)\r\n    }else{\r\n      setErrors('')\r\n      return(\r\n\r\n   fetch('http://localhost:3000/auth/register',{\r\n            method:'POST',\r\n            headers:{\r\n              'Accept':'application/json',\r\n              'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body:JSON.stringify(\r\n            {\r\n                name:name,\r\n                email:email,\r\n                 password:password \r\n              }\r\n             )\r\n          })   .then(async (response)=>{\r\n            const data = await response.json();\r\n            const status=await response.status;\r\n            console.log(data,status,'oo')\r\n          if(status ==200){\r\n            localStorage.setItem('user',data.adduser._id)\r\n            localStorage.setItem('admin',data.adduser.admin)\r\n            localStorage.setItem('token', data.token)\r\n        gohome()\r\n        window.location.reload(true);\r\n        // console.log(data.adduser.admin,'pp')\r\n          }else if (status == 400){\r\n            setErrors(data.message)\r\n         \r\n          }\r\n          }\r\n         \r\n         )\r\n          .catch((error)=>{console.error(error)})\r\n          )\r\n     }\r\n \r\n   }\r\n    return(\r\n        <div className=\"mainregister\">\r\n<div className=\"error\" style={{display:errors.length<1?'none':'',}}>\r\n{errors}\r\n</div>\r\n\r\n     <input type=\"text\" placeholder=\"نام\" onChange={namesave} />\r\n     <input type=\"text\" placeholder=\" نام خانوادگی\" onChange={lastnamesave} />\r\n     <input type=\"email\" placeholder=\"شماره موبایل یا ایمیل\"  onChange={emailsave}/>\r\n    <input type=\"password\" placeholder=\"رمز عبور\" onChange={passwordsave}/>\r\n    <text>\r\n    {recaptcha}\r\n    </text>\r\n\r\n    <ReCAPTCHA\r\n    \r\n    className={\"recaptcha\"}\r\n    hl={\"fa\"}\r\n    sitekey=\"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\"\r\n    onChange={recaptchastate}\r\n \r\n  />\r\n\r\n<button onClick={datasave}>\r\n  ثبت نام\r\n</button>\r\n\r\n    <text>قبلا ثبت نام کرده اید؟<Link   onClick={gologin}>وارد شوید</Link></text>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(Register);"]},"metadata":{},"sourceType":"module"}