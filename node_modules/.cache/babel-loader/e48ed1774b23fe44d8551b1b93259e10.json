{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\components\\\\pages\\\\login\\\\login.js\";\nimport React, { Component, useState, useContext, useEffect } from 'react';\nimport './login.css';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { Link } from 'react-router-dom';\nimport Spiner from './../../spinner/spinner';\nimport { Stufflistcontext } from './../../../context/stufflistcontext';\n\nconst Login = props => {\n  const [username, setusername] = useState('');\n  const [password, setpassword] = useState('');\n  const [errors, seterrors] = useState('');\n  const [recaptcha, setRecaptcha] = useState('');\n  const [check, setcheck] = useState(false);\n  const [showspiner, setShowspiner] = useState(false);\n  const {\n    changesearchbar\n  } = useContext(Stufflistcontext);\n  useEffect(() => {\n    changesearchbar(false);\n  }, []);\n\n  const pass = event => {\n    setpassword(event.target.value);\n  };\n\n  const mail = event => {\n    setusername(event.target.value);\n  };\n\n  const recaptchastate = () => {\n    setRecaptcha(true);\n  };\n\n  const gohome = () => {\n    props.history.push('/');\n  };\n\n  const goregister = () => {\n    props.history.push('/register');\n  };\n\n  const checkBox = () => {\n    setcheck(!check);\n  };\n\n  const login = props => {\n    let err = [];\n\n    if (username.length < 1 || password.length < 1) {\n      err.push(\"لطفا همه فیلد ها را پر کنید\");\n      seterrors(err);\n    } else if (password.length < 5) {\n      err.push(\"تعداد ارقام پسورد حداقل پنج رقم می باشد\");\n      seterrors(err);\n    } else if (username.indexOf('@') == -1 || username.indexOf('.') == -1) {\n      err.push(\"فرمت ایمیل معتبر نمی باشد\");\n      seterrors(err);\n    } else if (recaptcha == false) {\n      err.push(\"گزینه امنتی را فعال کنید\");\n      seterrors(err);\n    } else {\n      seterrors('');\n      setShowspiner(true);\n      return fetch('http://localhost:3000/auth/login', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password,\n          check: check\n        })\n      }).then(async response => {\n        const data = await response.json();\n        const status = await response.status;\n        console.log(data);\n\n        if (status == 200) {\n          setShowspiner(false); // console.log(data,'llll')\n\n          localStorage.setItem('user', data.userid); // localStorage.setItem('admin',data.admin)\n\n          localStorage.setItem('token', data.token);\n          gohome();\n          window.location.reload(true);\n        } else if (status == 400) {\n          setShowspiner(false);\n          seterrors(data.message);\n        } else if (status == 500) {\n          setShowspiner(false);\n          seterrors('خطا در ارتباط با سرور');\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"mainlogin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"loginerror\",\n    style: {\n      display: errors.length < 1 ? 'none' : ''\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, errors), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\",\n    onChange: mail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"\\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631\",\n    onChange: pass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"loginrecaptcha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(ReCAPTCHA, {\n    hl: \"fa\",\n    sitekey: \"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\",\n    onChange: recaptchastate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      display: showspiner ? 'flex' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Spiner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"\\u0648\\u0631\\u0648\\u062F\"), React.createElement(\"div\", {\n    className: \"cl\",\n    style: {\n      display: 'flex',\n      justifyContent: 'spacebetween'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: './reset',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"\\u0641\\u0631\\u0627\\u0645\\u0648\\u0634\\u06CC \\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631\"), React.createElement(\"text\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"\\u06A9\\u0627\\u0631\\u0628\\u0631 \\u062C\\u062F\\u06CC\\u062F \\u0647\\u0633\\u062A\\u06CC\\u062F\", React.createElement(Link, {\n    onClick: goregister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"\\u062B\\u0628\\u062A \\u0646\\u0627\\u0645 \\u06A9\\u0646\\u06CC\\u062F\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/components/pages/login/login.js"],"names":["React","Component","useState","useContext","useEffect","ReCAPTCHA","Link","Spiner","Stufflistcontext","Login","props","username","setusername","password","setpassword","errors","seterrors","recaptcha","setRecaptcha","check","setcheck","showspiner","setShowspiner","changesearchbar","pass","event","target","value","mail","recaptchastate","gohome","history","push","goregister","checkBox","login","err","length","indexOf","fetch","method","headers","body","JSON","stringify","then","response","data","json","status","console","log","localStorage","setItem","userid","token","window","location","reload","message","catch","error","display","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,EAAmCC,UAAnC,EAA8CC,SAA9C,QAA+D,OAA/D;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,gBAAR,QAA+B,qCAA/B;;AACA,MAAMC,KAAK,GAAEC,KAAD,IAAS;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACe,SAAD,EAAWC,YAAX,IAAyBhB,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACiB,KAAD,EAAOC,QAAP,IAAiBlB,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAACmB,UAAD,EAAYC,aAAZ,IAA2BpB,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM;AAACqB,IAAAA;AAAD,MAAkBpB,UAAU,CAACK,gBAAD,CAAlC;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMC,IAAI,GAAEC,KAAD,IAAS;AAClBX,IAAAA,WAAW,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFD;;AAGA,QAAMC,IAAI,GAAEH,KAAD,IAAS;AAClBb,IAAAA,WAAW,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFD;;AAGA,QAAME,cAAc,GAAC,MAAI;AACvBX,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAGA,QAAMY,MAAM,GAAC,MAAI;AACfpB,IAAAA,KAAK,CAACqB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,GAFD;;AAGA,QAAMC,UAAU,GAAC,MAAI;AACnBvB,IAAAA,KAAK,CAACqB,OAAN,CAAcC,IAAd,CAAmB,WAAnB;AACD,GAFD;;AAGA,QAAME,QAAQ,GAAC,MAAI;AACjBd,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACD,GAFD;;AAKA,QAAMgB,KAAK,GAAEzB,KAAD,IAAS;AACnB,QAAI0B,GAAG,GAAC,EAAR;;AACA,QAAGzB,QAAQ,CAAC0B,MAAT,GAAgB,CAAhB,IAAqBxB,QAAQ,CAACwB,MAAT,GAAgB,CAAxC,EAA0C;AACxCD,MAAAA,GAAG,CAACJ,IAAJ,CAAS,6BAAT;AACAhB,MAAAA,SAAS,CAACoB,GAAD,CAAT;AACD,KAHD,MAGM,IAAGvB,QAAQ,CAACwB,MAAT,GAAgB,CAAnB,EAAqB;AACzBD,MAAAA,GAAG,CAACJ,IAAJ,CAAS,yCAAT;AAEAhB,MAAAA,SAAS,CAACoB,GAAD,CAAT;AACD,KAJK,MAIA,IAAGzB,QAAQ,CAAC2B,OAAT,CAAiB,GAAjB,KAAwB,CAAC,CAAzB,IAA8B3B,QAAQ,CAAC2B,OAAT,CAAiB,GAAjB,KAAwB,CAAC,CAA1D,EAA4D;AAChEF,MAAAA,GAAG,CAACJ,IAAJ,CAAS,2BAAT;AACAhB,MAAAA,SAAS,CAACoB,GAAD,CAAT;AACD,KAHK,MAID,IAAGnB,SAAS,IAAI,KAAhB,EAAsB;AACzBmB,MAAAA,GAAG,CAACJ,IAAJ,CAAS,0BAAT;AACAhB,MAAAA,SAAS,CAACoB,GAAD,CAAT;AACD,KAHI,MAID;AACFpB,MAAAA,SAAS,CAAC,EAAD,CAAT;AACAM,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA,aACEiB,KAAK,CAAC,kCAAD,EAAoC;AACzCC,QAAAA,MAAM,EAAC,MADkC;AAEzCC,QAAAA,OAAO,EAAC;AACN,oBAAS,kBADH;AAEN,0BAAgB;AAFV,SAFiC;AAMzCC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CACH;AACEjC,UAAAA,QAAQ,EAACA,QADX;AAEEE,UAAAA,QAAQ,EAACA,QAFX;AAGEM,UAAAA,KAAK,EAACA;AAHR,SADG;AANoC,OAApC,CAAL,CAaM0B,IAbN,CAaW,MAAOC,QAAP,IAAkB;AAE3B,cAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AAEA,cAAMC,MAAM,GAAC,MAAMH,QAAQ,CAACG,MAA5B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,YAAGE,MAAM,IAAI,GAAb,EAAiB;AACf3B,UAAAA,aAAa,CAAC,KAAD,CAAb,CADe,CAEf;;AACA8B,UAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BN,IAAI,CAACO,MAAjC,EAHe,CAIf;;AACAF,UAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACQ,KAAnC;AACAzB,UAAAA,MAAM;AACN0B,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACD,SARD,MAQM,IAAGT,MAAM,IAAI,GAAb,EAAiB;AACrB3B,UAAAA,aAAa,CAAC,KAAD,CAAb;AACAN,UAAAA,SAAS,CAAC+B,IAAI,CAACY,OAAN,CAAT;AACD,SAHK,MAGA,IAAGV,MAAM,IAAI,GAAb,EAAiB;AACrB3B,UAAAA,aAAa,CAAC,KAAD,CAAb;AACAN,UAAAA,SAAS,CAAC,uBAAD,CAAT;AACD;AACF,OAlCD,EAoCC4C,KApCD,CAoCQC,KAAD,IAAS;AAACX,QAAAA,OAAO,CAACW,KAAR,CAAcA,KAAd;AAAqB,OApCtC,CADF;AAuCC;AACF,GA5DH;;AA6DE,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAC/C,MAAM,CAACsB,MAAP,GAAc,CAAd,GAAgB,MAAhB,GAAuB;AAAhC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCtB,MADD,CADA,EAIA;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,WAAW,EAAC,gCAAhC;AAAwC,IAAA,QAAQ,EAAEa,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EAKA;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,WAAW,EAAC,6CAAnC;AAA8C,IAAA,QAAQ,EAAEJ,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,EAMA;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AACA,IAAA,EAAE,EAAE,IADJ;AAEA,IAAA,OAAO,EAAC,0CAFR;AAGA,IAAA,QAAQ,EAAEK,cAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CANA,EAaA;AAAK,IAAA,KAAK,EAAE;AAACiC,MAAAA,OAAO,EAACzC,UAAU,GAAC,MAAD,GAAQ;AAA3B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAbA,EAmBA;AAAQ,IAAA,OAAO,EAAEc,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAnBA,EAsBA;AAAK,IAAA,SAAS,EAAC,IAAf;AAAoB,IAAA,KAAK,EAAE;AAAC2B,MAAAA,OAAO,EAAC,MAAT;AAAgBC,MAAAA,cAAc,EAAC;AAA/B,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8FADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FAAuB,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE9B,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAAvB,CAFA,CAtBA,CADF;AA6BC,CAzHL;;AA0HI,eAAexB,KAAf","sourcesContent":["import React, { Component,useState,useContext,useEffect } from 'react';\r\nimport './login.css';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { Link } from 'react-router-dom';\r\nimport Spiner from './../../spinner/spinner';\r\nimport {Stufflistcontext} from './../../../context/stufflistcontext';\r\nconst Login=(props)=>{\r\n  const [username, setusername] = useState('');\r\n  const [password, setpassword] = useState('');\r\n  const [errors, seterrors] = useState('');\r\n  const [recaptcha,setRecaptcha]=useState('');\r\n  const [check,setcheck]=useState(false);\r\n  const [showspiner,setShowspiner]=useState(false);\r\n  const {changesearchbar}=useContext(Stufflistcontext)\r\n  useEffect(() => {\r\n    changesearchbar(false)\r\n  }, [])\r\n  const pass=(event)=>{\r\n    setpassword(event.target.value)\r\n  }\r\n  const mail=(event)=>{\r\n    setusername(event.target.value)\r\n  }\r\n  const recaptchastate=()=>{\r\n    setRecaptcha(true)\r\n  }\r\n  const gohome=()=>{\r\n    props.history.push('/');\r\n  }\r\n  const goregister=()=>{\r\n    props.history.push('/register');\r\n  }\r\n  const checkBox=()=>{\r\n    setcheck(!check)\r\n  }\r\n  \r\n  \r\n  const login=(props)=>{\r\n    let err=[];\r\n    if(username.length<1 || password.length<1){\r\n      err.push(\"لطفا همه فیلد ها را پر کنید\");\r\n      seterrors(err)\r\n    }else if(password.length<5){\r\n      err.push(\"تعداد ارقام پسورد حداقل پنج رقم می باشد\");\r\n      \r\n      seterrors(err)\r\n    }else if(username.indexOf('@')== -1 || username.indexOf('.')== -1){\r\n      err.push(\"فرمت ایمیل معتبر نمی باشد\");\r\n      seterrors(err)\r\n    }\r\n    else if(recaptcha == false){\r\n      err.push(\"گزینه امنتی را فعال کنید\");\r\n      seterrors(err)\r\n    }\r\n    else{\r\n      seterrors('')\r\n      setShowspiner(true)\r\n      return(\r\n        fetch('http://localhost:3000/auth/login',{\r\n        method:'POST',\r\n        headers:{\r\n          'Accept':'application/json',\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body:JSON.stringify(\r\n          {\r\n            username:username,\r\n            password:password,\r\n            check:check\r\n          }\r\n          )\r\n        })   .then(async (response)=>{\r\n          \r\n          const data = await response.json();\r\n          \r\n          const status=await response.status;\r\n          console.log(data)\r\n          if(status == 200){\r\n            setShowspiner(false)\r\n            // console.log(data,'llll')\r\n            localStorage.setItem('user',data.userid)\r\n            // localStorage.setItem('admin',data.admin)\r\n            localStorage.setItem('token', data.token)\r\n            gohome()\r\n            window.location.reload(true);\r\n          }else if(status == 400){\r\n            setShowspiner(false)\r\n            seterrors(data.message)\r\n          }else if(status == 500){\r\n            setShowspiner(false)\r\n            seterrors('خطا در ارتباط با سرور')\r\n          }\r\n        }\r\n        )\r\n        .catch((error)=>{console.error(error)})\r\n        )\r\n      }\r\n    }\r\n    return(\r\n      <div className=\"mainlogin\">\r\n      <div className=\"loginerror\" style={{display:errors.length<1?'none':'',}}>\r\n      {errors}\r\n      </div>\r\n      <input type=\"email\" placeholder=\"ایمیل\" onChange={mail} />\r\n      <input type=\"password\" placeholder=\"رمز عبور\" onChange={pass} />\r\n      <div className=\"loginrecaptcha\">\r\n      <ReCAPTCHA\r\n      hl={\"fa\"}\r\n      sitekey=\"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\"\r\n      onChange={recaptchastate}\r\n      />\r\n      </div>\r\n      <div style={{display:showspiner?'flex':'none'}}>\r\n      <Spiner/>\r\n      </div>\r\n      {/* <div className=\"checkbox\">\r\n      <input type=\"checkbox\" name=\"remember\" onChange={checkBox} />\r\n      </div> */}\r\n      <button onClick={login}>\r\n      ورود\r\n      </button>\r\n      <div className=\"cl\" style={{display:'flex',justifyContent:'spacebetween'}}>\r\n      <Link to={'./reset'}>فراموشی رمز عبور</Link>\r\n      <text >کاربر جدید هستید<Link onClick={goregister}>ثبت نام کنید</Link></text>\r\n      </div>\r\n      </div>\r\n      )\r\n    }\r\n    export default Login;"]},"metadata":{},"sourceType":"module"}