{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\components\\\\pages\\\\customerdetail\\\\customerdetail.js\";\nimport React, { Component, useState, useContext, useEffect } from 'react';\nimport './customerdetail.css';\nimport { mainContext } from './../../../context/mainContext';\nimport { IconContext } from \"react-icons\";\nimport { FaCaretUp, FaSortDown } from \"react-icons/fa\";\nimport Towns from './../../pages/towns/towns';\nimport City from './../citys/city';\n\nvar MapboxGeocoder = require('@mapbox/mapbox-gl-geocoder');\n\nvar mapboxgl = require('mapbox-gl'); // var Layer = ReactMapboxGl.Layer;\n// var Feature = ReactMapboxGl.Feature;\n// import mapboxgl from 'mapbox-gl'\n\n\nconst Customerdetail = props => {\n  useEffect(() => {\n    mapboxgl.accessToken = \"pk.eyJ1IjoiZnJlZGVyaWtqdXV0aWxhaW5lbiIsImEiOiJjaXJocDZ5c3YwMDN3aThtaGxqNmhnc3RhIn0.0-t_qMzU5WbWKUu5UN6bRA\";\n    var map = new mapboxgl.Map({\n      container: \"map\",\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [-79.4512, 43.6568],\n      zoom: 13\n    });\n    var geocoder = new MapboxGeocoder({\n      accessToken: mapboxgl.accessToken,\n      mapboxgl: mapboxgl\n    }); // Add geolocate control to the map.\n\n    map.addControl(new mapboxgl.GeolocateControl({\n      positionOptions: {\n        enableHighAccuracy: true\n      },\n      trackUserLocation: true\n    }));\n  }, []);\n  const {\n    customertowns,\n    customercity,\n    showtown,\n    towns,\n    showcity,\n    citys\n  } = useContext(mainContext);\n  const [drop, setdrop] = useState('Dropdown'); // const[showtown,setshowtown]=useState(false);\n\n  const nametown = text => {\n    towns(text);\n  };\n\n  const namecity = text => {\n    citys(text);\n  };\n\n  return React.createElement(\"div\", {\n    id: \"map\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  });\n};\n\nexport default Customerdetail;","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/components/pages/customerdetail/customerdetail.js"],"names":["React","Component","useState","useContext","useEffect","mainContext","IconContext","FaCaretUp","FaSortDown","Towns","City","MapboxGeocoder","require","mapboxgl","Customerdetail","props","accessToken","map","Map","container","style","center","zoom","geocoder","addControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","customertowns","customercity","showtown","towns","showcity","citys","drop","setdrop","nametown","text","namecity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAoCC,UAApC,EAA+CC,SAA/C,QAA+D,OAA/D;AACA,OAAO,sBAAP;AACA,SAAQC,WAAR,QAA0B,gCAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,EAAmBC,UAAnB,QAAqC,gBAArC;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;AACA,IAAIC,cAAc,GAAGC,OAAO,CAAC,4BAAD,CAA5B;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAtB,C,CACA;AACA;AAKA;;;AACA,MAAME,cAAc,GAAEC,KAAD,IAAS;AAE1BX,EAAAA,SAAS,CAAC,MAAM;AAIZS,IAAAA,QAAQ,CAACG,WAAT,GACA,2GADA;AAEF,QAAIC,GAAG,GAAG,IAAIJ,QAAQ,CAACK,GAAb,CAAiB;AACzBC,MAAAA,SAAS,EAAE,KADc;AAEzBC,MAAAA,KAAK,EAAE,oCAFkB;AAGzBC,MAAAA,MAAM,EAAE,CAAC,CAAC,OAAF,EAAW,OAAX,CAHiB;AAIzBC,MAAAA,IAAI,EAAE;AAJmB,KAAjB,CAAV;AAOA,QAAIC,QAAQ,GAAG,IAAIZ,cAAJ,CAAmB;AAChCK,MAAAA,WAAW,EAAEH,QAAQ,CAACG,WADU;AAEhCH,MAAAA,QAAQ,EAAEA;AAFsB,KAAnB,CAAf,CAbc,CAmBZ;;AACAI,IAAAA,GAAG,CAACO,UAAJ,CACA,IAAIX,QAAQ,CAACY,gBAAb,CAA8B;AAC9BC,MAAAA,eAAe,EAAE;AACjBC,QAAAA,kBAAkB,EAAE;AADH,OADa;AAI9BC,MAAAA,iBAAiB,EAAE;AAJW,KAA9B,CADA;AAQH,GA5BQ,EA4BN,EA5BM,CAAT;AA6BA,QAAM;AAACC,IAAAA,aAAD;AAAeC,IAAAA,YAAf;AAA4BC,IAAAA,QAA5B;AAAqCC,IAAAA,KAArC;AAA2CC,IAAAA,QAA3C;AAAoDC,IAAAA;AAApD,MAA2D/B,UAAU,CAACE,WAAD,CAA3E;AAEA,QAAM,CAAC8B,IAAD,EAAMC,OAAN,IAAelC,QAAQ,CAAC,UAAD,CAA7B,CAjC0B,CAkC1B;;AACD,QAAMmC,QAAQ,GAAEC,IAAD,IAAQ;AACtBN,IAAAA,KAAK,CAACM,IAAD,CAAL;AACA,GAFD;;AAGA,QAAMC,QAAQ,GAAED,IAAD,IAAQ;AACtBJ,IAAAA,KAAK,CAACI,IAAD,CAAL;AACA,GAFD;;AAIC,SACE;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGH,CA7CD;;AA8CA,eAAexB,cAAf","sourcesContent":["import React, { Component ,useState,useContext,useEffect} from 'react';\r\nimport './customerdetail.css';\r\nimport {mainContext} from './../../../context/mainContext';\r\nimport { IconContext } from \"react-icons\";\r\nimport { FaCaretUp,FaSortDown } from \"react-icons/fa\";\r\nimport Towns from './../../pages/towns/towns';\r\nimport City from './../citys/city';\r\nvar MapboxGeocoder = require('@mapbox/mapbox-gl-geocoder');\r\nvar mapboxgl = require('mapbox-gl');\r\n// var Layer = ReactMapboxGl.Layer;\r\n// var Feature = ReactMapboxGl.Feature;\r\n\r\n\r\n  \r\n  \r\n// import mapboxgl from 'mapbox-gl'\r\nconst Customerdetail=(props)=>{\r\n\r\n    useEffect(() => {\r\n \r\n    \r\n\r\n        mapboxgl.accessToken =\r\n        \"pk.eyJ1IjoiZnJlZGVyaWtqdXV0aWxhaW5lbiIsImEiOiJjaXJocDZ5c3YwMDN3aThtaGxqNmhnc3RhIn0.0-t_qMzU5WbWKUu5UN6bRA\";\r\n      var map = new mapboxgl.Map({\r\n        container: \"map\",\r\n        style: \"mapbox://styles/mapbox/streets-v11\",\r\n        center: [-79.4512, 43.6568],\r\n        zoom: 13\r\n      });\r\n      \r\n      var geocoder = new MapboxGeocoder({\r\n        accessToken: mapboxgl.accessToken,\r\n        mapboxgl: mapboxgl\r\n      });\r\n      \r\n      \r\n        // Add geolocate control to the map.\r\n        map.addControl(\r\n        new mapboxgl.GeolocateControl({\r\n        positionOptions: {\r\n        enableHighAccuracy: true\r\n        },\r\n        trackUserLocation: true\r\n        })\r\n        );\r\n    }, [])\r\n    const {customertowns,customercity,showtown,towns,showcity,citys}=useContext(mainContext)\r\n   \r\n    const [drop,setdrop]=useState('Dropdown');\r\n    // const[showtown,setshowtown]=useState(false);\r\n   const nametown=(text)=>{\r\n    towns(text)\r\n   }\r\n   const namecity=(text)=>{\r\n    citys(text)\r\n   }\r\n   \r\n    return(\r\n      <div id=\"map\"></div>\r\n    )\r\n}\r\nexport default Customerdetail;"]},"metadata":{},"sourceType":"module"}