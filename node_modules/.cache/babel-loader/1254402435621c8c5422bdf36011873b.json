{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\components\\\\pages\\\\customerdetail\\\\customerdetail.js\";\nimport React, { Component, useState, useContext, useEffect } from 'react';\nimport './customerdetail.css';\nimport { mainContext } from './../../../context/mainContext';\nimport { IconContext } from \"react-icons\";\nimport { FaCaretUp, FaSortDown } from \"react-icons/fa\";\nimport Towns from './../../pages/towns/towns';\nimport City from './../citys/city';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n\nvar mapboxgl = require('mapbox-gl/dist/mapbox-gl.js');\n\nvar MapboxLanguage = require('@mapbox/mapbox-gl-language'); // import mapboxgl from 'mapbox-gl'\n\n\nconst Customerdetail = props => {\n  useEffect(() => {\n    mapboxgl.accessToken = 'pk.eyJ1IjoiYmVobmFtMTciLCJhIjoiY2ticzRoNWNjMDAyZTJ5bDU5OWpiZ3B3diJ9.BDs34GTjlq6M3trXe40xvQ';\n    mapboxgl.setRTLTextPlugin('https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.10.1/mapbox-gl-rtl-text.js', null, true);\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v11'\n    });\n    var language = new MapboxLanguage({\n      defaultLanguage: 'ur'\n    });\n    map.addControl(language);\n    map.addControl(new MapboxGeocoder({\n      accessToken: mapboxgl.accessToken\n    }));\n  }, []);\n  const {\n    customertowns,\n    customercity,\n    showtown,\n    towns,\n    showcity,\n    citys\n  } = useContext(mainContext);\n  const [drop, setdrop] = useState('Dropdown'); // const[showtown,setshowtown]=useState(false);\n\n  const nametown = text => {\n    towns(text);\n  };\n\n  const namecity = text => {\n    citys(text);\n  };\n\n  return React.createElement(\"div\", {\n    id: \"map\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  });\n};\n\nexport default Customerdetail;","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/components/pages/customerdetail/customerdetail.js"],"names":["React","Component","useState","useContext","useEffect","mainContext","IconContext","FaCaretUp","FaSortDown","Towns","City","MapboxGeocoder","mapboxgl","require","MapboxLanguage","Customerdetail","props","accessToken","setRTLTextPlugin","map","Map","container","style","language","defaultLanguage","addControl","customertowns","customercity","showtown","towns","showcity","citys","drop","setdrop","nametown","text","namecity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAoCC,UAApC,EAA+CC,SAA/C,QAA+D,OAA/D;AACA,OAAO,sBAAP;AACA,SAAQC,WAAR,QAA0B,gCAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,EAAmBC,UAAnB,QAAqC,gBAArC;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,6BAAD,CAAtB;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,4BAAD,CAA5B,C,CACA;;;AACA,MAAME,cAAc,GAAEC,KAAD,IAAS;AAC1BZ,EAAAA,SAAS,CAAC,MAAM;AAEZQ,IAAAA,QAAQ,CAACK,WAAT,GAAuB,4FAAvB;AACAL,IAAAA,QAAQ,CAACM,gBAAT,CAA0B,8FAA1B,EACR,IADQ,EACF,IADE;AAEA,QAAIC,GAAG,GAAG,IAAIP,QAAQ,CAACQ,GAAb,CAAiB;AAC3BC,MAAAA,SAAS,EAAE,KADgB;AAE3BC,MAAAA,KAAK,EAAE;AAFoB,KAAjB,CAAV;AAMR,QAAIC,QAAQ,GAAG,IAAIT,cAAJ,CAAmB;AAACU,MAAAA,eAAe,EAAE;AAAlB,KAAnB,CAAf;AACAL,IAAAA,GAAG,CAACM,UAAJ,CAAeF,QAAf;AAEAJ,IAAAA,GAAG,CAACM,UAAJ,CAAe,IAAId,cAAJ,CAAmB;AAAQM,MAAAA,WAAW,EAAEL,QAAQ,CAACK;AAA9B,KAAnB,CAAf;AAGK,GAjBQ,EAiBN,EAjBM,CAAT;AAkBA,QAAM;AAACS,IAAAA,aAAD;AAAeC,IAAAA,YAAf;AAA4BC,IAAAA,QAA5B;AAAqCC,IAAAA,KAArC;AAA2CC,IAAAA,QAA3C;AAAoDC,IAAAA;AAApD,MAA2D5B,UAAU,CAACE,WAAD,CAA3E;AAEA,QAAM,CAAC2B,IAAD,EAAMC,OAAN,IAAe/B,QAAQ,CAAC,UAAD,CAA7B,CArB0B,CAsB1B;;AACD,QAAMgC,QAAQ,GAAEC,IAAD,IAAQ;AACtBN,IAAAA,KAAK,CAACM,IAAD,CAAL;AACA,GAFD;;AAGA,QAAMC,QAAQ,GAAED,IAAD,IAAQ;AACtBJ,IAAAA,KAAK,CAACI,IAAD,CAAL;AACA,GAFD;;AAIC,SACG;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AAKH,CAnCD;;AAoCA,eAAepB,cAAf","sourcesContent":["import React, { Component ,useState,useContext,useEffect} from 'react';\r\nimport './customerdetail.css';\r\nimport {mainContext} from './../../../context/mainContext';\r\nimport { IconContext } from \"react-icons\";\r\nimport { FaCaretUp,FaSortDown } from \"react-icons/fa\";\r\nimport Towns from './../../pages/towns/towns';\r\nimport City from './../citys/city';\r\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder'\r\nvar mapboxgl = require('mapbox-gl/dist/mapbox-gl.js');\r\nvar MapboxLanguage = require('@mapbox/mapbox-gl-language');\r\n// import mapboxgl from 'mapbox-gl'\r\nconst Customerdetail=(props)=>{\r\n    useEffect(() => {\r\n       \r\n        mapboxgl.accessToken = 'pk.eyJ1IjoiYmVobmFtMTciLCJhIjoiY2ticzRoNWNjMDAyZTJ5bDU5OWpiZ3B3diJ9.BDs34GTjlq6M3trXe40xvQ';\r\n        mapboxgl.setRTLTextPlugin('https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.10.1/mapbox-gl-rtl-text.js', \r\nnull ,true );\r\n        var map = new mapboxgl.Map({\r\n        container: 'map',\r\n        style: 'mapbox://styles/mapbox/streets-v11'\r\n        });\r\n \r\n   \r\nvar language = new MapboxLanguage({defaultLanguage: 'ur'});\r\nmap.addControl(language);\r\n\r\nmap.addControl(new MapboxGeocoder({       accessToken: mapboxgl.accessToken   }));\r\n\r\n\r\n    }, [])\r\n    const {customertowns,customercity,showtown,towns,showcity,citys}=useContext(mainContext)\r\n   \r\n    const [drop,setdrop]=useState('Dropdown');\r\n    // const[showtown,setshowtown]=useState(false);\r\n   const nametown=(text)=>{\r\n    towns(text)\r\n   }\r\n   const namecity=(text)=>{\r\n    citys(text)\r\n   }\r\n   \r\n    return(\r\n       <div id=\"map\">     \r\n           \r\n       </div>\r\n    )\r\n}\r\nexport default Customerdetail;"]},"metadata":{},"sourceType":"module"}