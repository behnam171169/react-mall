{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\components\\\\pages\\\\login\\\\login.js\";\nimport React, { Component, useState } from 'react';\nimport './register.css';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { Link } from 'react-router-dom';\n\nconst Login = () => {\n  const [username, setusername] = useState('');\n  const [password, setpassword] = useState('');\n  const [errors, seterrors] = useState('');\n  const [showerror, setshowerror] = useState('none');\n\n  const pass = event => {\n    setpassword(event.target.value);\n  };\n\n  const mail = event => {\n    setusername(event.target.value);\n  };\n\n  const close = () => {\n    props.closemodal();\n  };\n\n  const login = () => {\n    let err = [];\n\n    if (username.length < 1 || password.length < 1) {\n      err.push(\"لطفا همه فیلد ها را پر کنید\");\n      setshowerror('flex');\n      seterrors(err);\n    } else if (password.length < 5) {\n      err.push(\"تعداد ارقام پسورد حداقل پنج رقم می باشد\");\n      setshowerror('flex');\n      seterrors(err);\n    } else if (username.indexOf('@') == -1 || username.indexOf('.') == -1) {\n      err.push(\"فرمت ایمیل معتبر نمی باشد\");\n      setshowerror('flex');\n      seterrors(err);\n    } //     else if(recaptcha == false){\n    //      err.push(\"گزینه امنتی را فعال کنید\");\n    //      seterrors(err)\n    //    }\n    else {\n        seterrors('');\n        setshowerror('none');\n        return fetch('http://localhost:3000/auth/login', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: JSON.stringify({\n            email: username,\n            password: password\n          })\n        }).then(async response => {\n          const data = await response.json();\n          const statuse = await response.status;\n\n          if (statuse == 200) {\n            close();\n            setshowerror('none');\n            console.log('kk66');\n          } else {\n            seterrors(data.message);\n            setshowerror('flex');\n          }\n        }).catch(error => {\n          console.error(error);\n        });\n      }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"mainregister\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"error\",\n    style: {\n      display: errors.length < 1 ? 'none' : ''\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, errors), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\",\n    onChange: mail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"\\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631\",\n    onChange: pass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"text\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, recaptcha), React.createElement(\"div\", {\n    className: \"recaptcha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(ReCAPTCHA, {\n    hl: \"fa\",\n    sitekey: \"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\",\n    onChange: recaptchastate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), \",\"), React.createElement(\"button\", {\n    onClick: datasave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"\\u0648\\u0631\\u0648\\u062F\"), React.createElement(\"text\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"\\u0642\\u0628\\u0644\\u0627 \\u062B\\u0628\\u062A \\u0646\\u0627\\u0645 \\u06A9\\u0631\\u062F\\u0647 \\u0627\\u06CC\\u062F\\u061F\", React.createElement(Link, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"\\u0648\\u0627\\u0631\\u062F \\u0634\\u0648\\u06CC\\u062F\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/components/pages/login/login.js"],"names":["React","Component","useState","ReCAPTCHA","Link","Login","username","setusername","password","setpassword","errors","seterrors","showerror","setshowerror","pass","event","target","value","mail","close","props","closemodal","login","err","length","push","indexOf","fetch","method","headers","body","JSON","stringify","email","then","response","data","json","statuse","status","console","log","message","catch","error","display","recaptcha","recaptchastate","datasave"],"mappings":"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","sourcesContent":["import React, { Component,useState } from 'react'\r\nimport './register.css';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { Link } from 'react-router-dom';\r\nconst Login=()=>{\r\n    const [username, setusername] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [errors, seterrors] = useState('');\r\n    const [showerror,setshowerror]=useState('none')\r\n    const pass=(event)=>{\r\n        setpassword(event.target.value)\r\n    }\r\n    const mail=(event)=>{\r\n        setusername(event.target.value)\r\n    }\r\nconst close=()=>{\r\n       props.closemodal();\r\n    }\r\n\r\n  \r\n    const login=()=>{\r\n        let err=[];\r\n        if(username.length<1 || password.length<1){\r\n   err.push(\"لطفا همه فیلد ها را پر کنید\");\r\n   setshowerror('flex')\r\nseterrors(err)\r\n        }else if(password.length<5){\r\n          err.push(\"تعداد ارقام پسورد حداقل پنج رقم می باشد\");\r\n          setshowerror('flex')\r\n          seterrors(err)\r\n        }else if(username.indexOf('@')== -1 || username.indexOf('.')== -1){\r\n          err.push(\"فرمت ایمیل معتبر نمی باشد\");\r\n          setshowerror('flex')\r\n          seterrors(err)\r\n        }\r\n    //     else if(recaptcha == false){\r\n    //      err.push(\"گزینه امنتی را فعال کنید\");\r\n    //      seterrors(err)\r\n    //    }\r\n       else{\r\n        seterrors('')\r\n        setshowerror('none')\r\n        return(\r\n            fetch('http://localhost:3000/auth/login',{\r\n                     method:'POST',\r\n                     headers:{\r\n                       'Accept':'application/json',\r\n                       'Content-Type': 'application/x-www-form-urlencoded'\r\n                     },\r\n                     body:JSON.stringify(\r\n                     {\r\n                         email:username,\r\n                          password:password \r\n                       }\r\n                      )\r\n                   })   .then(async (response)=>{\r\n                     const data = await response.json();\r\n                     const statuse=await response.status;\r\n                   if(statuse == 200){\r\n               close()\r\n                  setshowerror('none')\r\n                    console.log('kk66')\r\n                   }else{\r\n                    seterrors(data.message)\r\n                    setshowerror('flex')\r\n                   }\r\n                   }\r\n                  \r\n                  )\r\n                   .catch((error)=>{console.error(error)})\r\n                   )\r\n                }\r\n    }\r\n    return(\r\n        <div className=\"mainregister\">\r\n<div className=\"error\" style={{display:errors.length<1?'none':'',}}>\r\n{errors}\r\n</div>\r\n     <input type=\"email\" placeholder=\"ایمیل\" onChange={mail} />\r\n    <input type=\"password\" placeholder=\"رمز عبور\" onChange={pass} />\r\n    <text>\r\n    {recaptcha}\r\n    </text>\r\n    <div className=\"recaptcha\">\r\n    <ReCAPTCHA\r\n    hl={\"fa\"}\r\n    sitekey=\"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\"\r\n    onChange={recaptchastate}\r\n  />,\r\n </div>\r\n<button onClick={datasave}>\r\n  ورود\r\n</button>\r\n\r\n    <text>قبلا ثبت نام کرده اید؟<Link>وارد شوید</Link></text>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}