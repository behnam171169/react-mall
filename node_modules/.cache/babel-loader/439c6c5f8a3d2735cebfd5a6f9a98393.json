{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\components\\\\pages\\\\changepassword\\\\changepassword.js\";\nimport React, { useState } from 'react';\nimport './changepassword.css';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { Link } from 'react-router-dom';\n\nconst Changepassword = props => {\n  const [username, setusername] = useState('');\n  const [password, setpassword] = useState('');\n  const [errors, seterrors] = useState('');\n  const [showerror, setshowerror] = useState('none');\n  const [recaptcha, setRecaptcha] = useState('');\n  const url = window.location.pathname;\n  const curenturl = str.slice(7);\n  console.log(cerenturl);\n\n  const mail = event => {\n    setusername(event.target.value);\n  };\n\n  const pass = event => {\n    setpassword(event.target.value);\n  };\n\n  const recaptchastate = () => {\n    setRecaptcha(true);\n  };\n\n  const gohome = () => {\n    props.history.replace('./');\n  };\n\n  const changepass = () => {\n    if (username.indexOf('.com') == -1 || username.indexOf('@') == -1) {\n      seterrors('فرمت ایمیل نامعتبر است');\n      setshowerror('flex');\n    } else if (password.length < 5) {\n      seterrors('تعدادارقام پسوورد نباید کمتر از 5باشد');\n      setshowerror('flex');\n    } else if (recaptcha == false) {} else {\n      return setshowerror('none'), fetch('http://localhost:3000/auth/password/reset', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: JSON.stringify({\n          email: username,\n          password: password\n        })\n      }).then(async response => {\n        const data = await response.json();\n        const statuse = await response.status;\n        console.log(data);\n\n        if (statuse == 200) {\n          setshowerror('none');\n          gohome();\n        } else if (statuse == 400) {\n          seterrors(data.message);\n          setshowerror('flex');\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"mainreset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"error\",\n    style: {\n      display: errors.length < 1 ? 'none' : ''\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, errors), React.createElement(\"text\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, cerenturl), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\",\n    onChange: mail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"\\u067E\\u0633\\u0648\\u0648\\u0631\\u062F\",\n    onChange: pass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"recaptcha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(ReCAPTCHA, {\n    hl: \"fa\",\n    sitekey: \"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\",\n    onChange: recaptchastate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: changepass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"\\u0628\\u0627\\u0632\\u06CC\\u0627\\u0628\\u06CC \\u0631\\u0645\\u0632\"));\n};\n\nexport default Changepassword;","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/components/pages/changepassword/changepassword.js"],"names":["React","useState","ReCAPTCHA","Link","Changepassword","props","username","setusername","password","setpassword","errors","seterrors","showerror","setshowerror","recaptcha","setRecaptcha","url","window","location","pathname","curenturl","str","slice","console","log","cerenturl","mail","event","target","value","pass","recaptchastate","gohome","history","replace","changepass","indexOf","length","fetch","method","headers","body","JSON","stringify","email","then","response","data","json","statuse","status","message","catch","error","display"],"mappings":"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","sourcesContent":["import React, {useState } from 'react';\r\nimport './changepassword.css';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Changepassword=(props)=>{\r\n    const [username, setusername] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [errors, seterrors] = useState('');\r\n    const [showerror,setshowerror]=useState('none')\r\n    const [recaptcha,setRecaptcha]=useState('');\r\n    const url=window.location.pathname;\r\n  const curenturl= str.slice(7);\r\n\r\n   console.log(cerenturl);\r\n    const mail=(event)=>{\r\n        setusername(event.target.value)\r\n    }\r\n    const pass=(event)=>{\r\n        setpassword(event.target.value)\r\n    }\r\n    const recaptchastate=()=>{\r\n\r\n      setRecaptcha(true)\r\n      \r\n     }\r\n    const gohome=()=>{\r\n        props.history.replace('./')\r\n    }\r\n    const changepass=()=>{\r\nif(username.indexOf('.com')==-1 ||username.indexOf('@')==-1 ){\r\n    seterrors('فرمت ایمیل نامعتبر است')\r\n    setshowerror('flex')\r\n}else if(password.length < 5){\r\n    seterrors('تعدادارقام پسوورد نباید کمتر از 5باشد')\r\n    setshowerror('flex')\r\n}else if(recaptcha==false){\r\n\r\n}\r\nelse{\r\n    return(\r\n        setshowerror('none'),\r\n        fetch('http://localhost:3000/auth/password/reset',{\r\n                 method:'POST',\r\n                 headers:{\r\n                   'Accept':'application/json',\r\n                   'Content-Type': 'application/x-www-form-urlencoded'\r\n                 },\r\n                 body:JSON.stringify(\r\n                 {\r\n                     email:username,\r\n                     password:password\r\n            \r\n                   }\r\n                  )\r\n               })  \r\n                .then(async (response)=>{\r\n                 const data = await response.json();\r\n                 const statuse=await response.status;\r\n               console.log(data)\r\n               if(statuse == 200){\r\n              setshowerror('none')\r\n             gohome()\r\n            \r\n               }else if(statuse == 400){\r\n                seterrors(data.message)\r\n                setshowerror('flex')\r\n               }\r\n               }\r\n              \r\n              )\r\n               .catch((error)=>{console.error(error)})\r\n               )\r\n            }\r\n    }\r\n    return(\r\n        <div className=\"mainreset\">\r\n<div className=\"error\" style={{display:errors.length<1?'none':'',}}>\r\n{errors}\r\n</div>\r\n<text>\r\n{cerenturl}\r\n</text>\r\n\r\n     <input type=\"email\" placeholder=\"ایمیل\" onChange={mail} />\r\n     <input type=\"password\" placeholder=\"پسوورد\" onChange={pass} />\r\n    <div className=\"recaptcha\">\r\n    <ReCAPTCHA\r\n    hl={\"fa\"}\r\n    sitekey=\"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\"\r\n    onChange={recaptchastate}\r\n  />\r\n </div>\r\n<button onClick={changepass} >\r\nبازیابی رمز\r\n</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Changepassword;"]},"metadata":{},"sourceType":"module"}