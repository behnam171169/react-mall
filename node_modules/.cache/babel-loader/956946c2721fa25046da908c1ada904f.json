{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\context\\\\mainContext.js\";\nimport React, { Component, useState, useEffect } from 'react';\nexport const mainContext = React.createContext();\n\nconst MainContextProvider = props => {\n  const [login, setlogin] = useState(false);\n  const [admin, setadmin] = useState(true);\n  const [username, setusername] = useState('');\n  const [userid, setuserid] = useState('');\n  const [customertowns, setcustomertowns] = useState('استان');\n  const [customercity, setcustomercity] = useState('شهر');\n  const [showtown, setshowtown] = useState(false);\n  const [showcity, setshowcity] = useState(false); // const checkadmin=localStorage.getItem('admin');\n\n  const token = localStorage.getItem('token');\n  const user = localStorage.getItem('user'); // console.log(token,'ppppppp')\n\n  useEffect(() => {\n    // settoken(localStorage.getItem('token'))\n    // setadmin(checkadmin)\n    setuserid(user);\n    fetch('http://localhost:3000/auth/login/token', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'headers': token\n      }\n    }).then(async response => {\n      const data = await response.json();\n      const status = await response.status;\n\n      if (status == 200) {\n        setlogin(true);\n        setusername(data.name);\n        setadmin(data.admin);\n      } else {\n        setlogin(false);\n        setadmin(false);\n      }\n    });\n  }, []);\n  console.log(admin, 'yyyyyy');\n\n  const towns = text => {\n    setcustomertowns(text);\n    setshowtown(!showtown);\n  };\n\n  const citys = text => {\n    setcustomercity(text);\n    setshowcity(!showcity);\n  };\n\n  const show = () => {\n    setshowtown(false);\n    setshowcity(false);\n  };\n\n  return React.createElement(mainContext.Provider, {\n    value: {\n      login,\n      username,\n      admin,\n      userid,\n      towns,\n      customertowns,\n      showtown,\n      customercity,\n      showcity,\n      citys,\n      show\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default MainContextProvider;","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/context/mainContext.js"],"names":["React","Component","useState","useEffect","mainContext","createContext","MainContextProvider","props","login","setlogin","admin","setadmin","username","setusername","userid","setuserid","customertowns","setcustomertowns","customercity","setcustomercity","showtown","setshowtown","showcity","setshowcity","token","localStorage","getItem","user","fetch","method","headers","then","response","data","json","status","name","console","log","towns","text","citys","show","children"],"mappings":"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","sourcesContent":["import React, { Component,useState,useEffect } from 'react';\r\nexport const mainContext=React.createContext();\r\nconst MainContextProvider=(props)=>{\r\n  \r\n const [login, setlogin] = useState(false);\r\n const [admin, setadmin] = useState(true);\r\n const[username,setusername]=useState('');\r\n const [userid, setuserid] = useState('');\r\n const [customertowns, setcustomertowns] = useState('استان');\r\n const [customercity, setcustomercity] = useState('شهر');\r\n const[showtown,setshowtown]=useState(false);\r\n const[showcity,setshowcity]=useState(false);\r\n  // const checkadmin=localStorage.getItem('admin');\r\n  const token=localStorage.getItem('token');\r\n  const user=localStorage.getItem('user');\r\n  // console.log(token,'ppppppp')\r\n  useEffect(()=>{\r\n    // settoken(localStorage.getItem('token'))\r\n    // setadmin(checkadmin)\r\n    setuserid(user)\r\n    fetch('http://localhost:3000/auth/login/token',{\r\n      method:'POST',\r\n      headers:{\r\n        'Accept':'application/json',\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        'headers':token\r\n      },\r\n  }).then(async (response)=>{\r\n    const data = await response.json();\r\n    const status=await response.status;\r\n   \r\n    if(status==200){\r\n\r\n      setlogin(true)\r\n      setusername(data.name)\r\n      setadmin(data.admin)\r\n\r\n    }else{\r\n      setlogin(false)\r\n      setadmin(false)\r\n    }\r\n })},[])\r\n\r\nconsole.log(admin,'yyyyyy')\r\n  const towns=(text)=>{\r\nsetcustomertowns(text)\r\nsetshowtown(!showtown)\r\n  }\r\n  const citys=(text)=>{\r\n    setcustomercity(text)\r\n    setshowcity(!showcity)\r\n      }\r\n    const  show=()=>{\r\n      setshowtown(false)\r\n      setshowcity(false)\r\n    }\r\n \r\n    return(\r\n        <mainContext.Provider value={{login,username,admin,userid,towns,\r\n        customertowns,showtown,customercity,showcity,citys,show\r\n        }}>\r\n          {props.children}\r\n        </mainContext.Provider>\r\n    )\r\n}\r\n \r\n\r\nexport default MainContextProvider;"]},"metadata":{},"sourceType":"module"}