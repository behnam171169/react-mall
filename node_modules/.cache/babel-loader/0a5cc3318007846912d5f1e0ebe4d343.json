{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\components\\\\pages\\\\customerdetail\\\\customerdetail.js\";\nimport React, { Component, useState, useContext, useEffect } from 'react';\nimport './customerdetail.css';\nimport { mainContext } from './../../../context/mainContext';\nimport { IconContext } from \"react-icons\";\nimport { FaCaretUp, FaSortDown } from \"react-icons/fa\";\nimport Towns from './../../pages/towns/towns';\nimport City from './../citys/city';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';\n\nvar MapboxLanguage = require('@mapbox/mapbox-gl-language'); // import mapboxgl from 'mapbox-gl'\n\n\nconst Customerdetail = props => {\n  useEffect(() => {\n    mapboxgl.accessToken = 'pk.eyJ1IjoiYmVobmFtMTciLCJhIjoiY2ticzRoNWNjMDAyZTJ5bDU5OWpiZ3B3diJ9.BDs34GTjlq6M3trXe40xvQ';\n    mapboxgl.setRTLTextPlugin('https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js', null, true // Lazy load the plugin\n    );\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v11',\n      // stylesheet location\n      center: [-74.5, 40],\n      // starting position [lng, lat]\n      zoom: 9 // starting zoom\n\n    });\n    map.addControl(new MapboxGeocoder({\n      accessToken: mapboxgl.accessToken\n    }));\n    var language = new MapboxLanguage();\n    map.addControl(language);\n    mapboxgl.setRTLTextPlugin('https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.1.0/mapbox-gl-rtl-text.js');\n    var mapboxLanguage = new MapboxLanguage({\n      defaultLanguage: 'en'\n    });\n    map.addControl(mapboxLanguage); // const geocoder = new MapboxGeocoder({\n    //   accessToken: mapboxgl.accessToken,\n    //   mapboxgl: mapboxgl\n    // });\n  }, []);\n  const {\n    customertowns,\n    customercity,\n    showtown,\n    towns,\n    showcity,\n    citys\n  } = useContext(mainContext);\n  const [drop, setdrop] = useState('Dropdown'); // const[showtown,setshowtown]=useState(false);\n\n  const nametown = text => {\n    towns(text);\n  };\n\n  const namecity = text => {\n    citys(text);\n  };\n\n  return React.createElement(\"div\", {\n    id: \"map\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  });\n};\n\nexport default Customerdetail;","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/components/pages/customerdetail/customerdetail.js"],"names":["React","Component","useState","useContext","useEffect","mainContext","IconContext","FaCaretUp","FaSortDown","Towns","City","mapboxgl","MapboxGeocoder","MapboxLanguage","require","Customerdetail","props","accessToken","setRTLTextPlugin","map","Map","container","style","center","zoom","addControl","language","mapboxLanguage","defaultLanguage","customertowns","customercity","showtown","towns","showcity","citys","drop","setdrop","nametown","text","namecity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAoCC,UAApC,EAA+CC,SAA/C,QAA+D,OAA/D;AACA,OAAO,sBAAP;AACA,SAAQC,WAAR,QAA0B,gCAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,EAAmBC,UAAnB,QAAqC,gBAArC;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AAEA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAO,wDAAP;;AACA,IAAIC,cAAc,GAAGC,OAAO,CAAC,4BAAD,CAA5B,C,CAIA;;;AACA,MAAMC,cAAc,GAAEC,KAAD,IAAS;AAC5BZ,EAAAA,SAAS,CAAC,MAAI;AACZO,IAAAA,QAAQ,CAACM,WAAT,GAAuB,4FAAvB;AACAN,IAAAA,QAAQ,CAACO,gBAAT,CACE,6FADF,EAEE,IAFF,EAGE,IAHF,CAGO;AAHP;AAKA,QAAIC,GAAG,GAAG,IAAIR,QAAQ,CAACS,GAAb,CAAiB;AAC/BC,MAAAA,SAAS,EAAE,KADoB;AAE/BC,MAAAA,KAAK,EAAE,oCAFwB;AAEc;AAC7CC,MAAAA,MAAM,EAAE,CAAC,CAAC,IAAF,EAAQ,EAAR,CAHuB;AAGV;AACrBC,MAAAA,IAAI,EAAE,CAJyB,CAIvB;;AAJuB,KAAjB,CAAV;AAOJL,IAAAA,GAAG,CAACM,UAAJ,CAAe,IAAIb,cAAJ,CAAmB;AAAQK,MAAAA,WAAW,EAAEN,QAAQ,CAACM;AAA9B,KAAnB,CAAf;AACA,QAAIS,QAAQ,GAAG,IAAIb,cAAJ,EAAf;AACAM,IAAAA,GAAG,CAACM,UAAJ,CAAeC,QAAf;AACAf,IAAAA,QAAQ,CAACO,gBAAT,CAA0B,6FAA1B;AACA,QAAIS,cAAc,GAAG,IAAId,cAAJ,CAAmB;AACxCe,MAAAA,eAAe,EAAE;AADuB,KAAnB,CAArB;AAIAT,IAAAA,GAAG,CAACM,UAAJ,CAAeE,cAAf,EAtBgB,CAuBhB;AACA;AACA;AACA;AAEG,GA5BQ,EA4BP,EA5BO,CAAT;AA6BE,QAAM;AAACE,IAAAA,aAAD;AAAeC,IAAAA,YAAf;AAA4BC,IAAAA,QAA5B;AAAqCC,IAAAA,KAArC;AAA2CC,IAAAA,QAA3C;AAAoDC,IAAAA;AAApD,MAA2D/B,UAAU,CAACE,WAAD,CAA3E;AACA,QAAM,CAAC8B,IAAD,EAAMC,OAAN,IAAelC,QAAQ,CAAC,UAAD,CAA7B,CA/B0B,CAgC1B;;AACD,QAAMmC,QAAQ,GAAEC,IAAD,IAAQ;AACtBN,IAAAA,KAAK,CAACM,IAAD,CAAL;AACA,GAFD;;AAGA,QAAMC,QAAQ,GAAED,IAAD,IAAQ;AACtBJ,IAAAA,KAAK,CAACI,IAAD,CAAL;AACA,GAFD;;AAIC,SAEE;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF;AAKH,CA7CD;;AA8CA,eAAevB,cAAf","sourcesContent":["import React, { Component ,useState,useContext,useEffect} from 'react';\r\nimport './customerdetail.css';\r\nimport {mainContext} from './../../../context/mainContext';\r\nimport { IconContext } from \"react-icons\";\r\nimport { FaCaretUp,FaSortDown } from \"react-icons/fa\";\r\nimport Towns from './../../pages/towns/towns';\r\nimport City from './../citys/city';\r\n\r\nimport mapboxgl from 'mapbox-gl'\r\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\r\nimport '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';\r\nvar MapboxLanguage = require('@mapbox/mapbox-gl-language');\r\n\r\n  \r\n  \r\n// import mapboxgl from 'mapbox-gl'\r\nconst Customerdetail=(props)=>{\r\n  useEffect(()=>{\r\n    mapboxgl.accessToken = 'pk.eyJ1IjoiYmVobmFtMTciLCJhIjoiY2ticzRoNWNjMDAyZTJ5bDU5OWpiZ3B3diJ9.BDs34GTjlq6M3trXe40xvQ';\r\n    mapboxgl.setRTLTextPlugin(\r\n      'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js',\r\n      null,\r\n      true // Lazy load the plugin\r\n      );\r\n    var map = new mapboxgl.Map({\r\ncontainer: 'map',\r\nstyle: 'mapbox://styles/mapbox/streets-v11', // stylesheet location\r\ncenter: [-74.5, 40], // starting position [lng, lat]\r\nzoom: 9 // starting zoom\r\n});\r\n\r\nmap.addControl(new MapboxGeocoder({       accessToken: mapboxgl.accessToken   })); \r\nvar language = new MapboxLanguage();\r\nmap.addControl(language);\r\nmapboxgl.setRTLTextPlugin('https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.1.0/mapbox-gl-rtl-text.js');\r\nvar mapboxLanguage = new MapboxLanguage({\r\ndefaultLanguage: 'en'\r\n});\r\n\r\nmap.addControl(mapboxLanguage);\r\n// const geocoder = new MapboxGeocoder({\r\n//   accessToken: mapboxgl.accessToken,\r\n//   mapboxgl: mapboxgl\r\n// });\r\n\r\n  },[])\r\n    const {customertowns,customercity,showtown,towns,showcity,citys}=useContext(mainContext)\r\n    const [drop,setdrop]=useState('Dropdown');\r\n    // const[showtown,setshowtown]=useState(false);\r\n   const nametown=(text)=>{\r\n    towns(text)\r\n   }\r\n   const namecity=(text)=>{\r\n    citys(text)\r\n   }\r\n   \r\n    return(\r\n\r\n      <div id=\"map\"></div>\r\n\r\n    )\r\n}\r\nexport default Customerdetail;"]},"metadata":{},"sourceType":"module"}