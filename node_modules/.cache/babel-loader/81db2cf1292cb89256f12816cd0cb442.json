{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\components\\\\pages\\\\resetpassword\\\\resetpassword.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport './resetpassword.css';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport Spiner from './../../spinner/spinner';\nimport { withRouter } from 'react-router-dom';\nimport { mainContext } from './../../../context/mainContext';\nimport Swal from 'sweetalert2';\n\nconst Resetpassword = props => {\n  const {\n    login\n  } = useContext(mainContext);\n  const [username, setusername] = useState('');\n  const [errors, seterrors] = useState('');\n  const [recaptcha, setRecaptcha] = useState(false);\n  const [showspiner, setShowspiner] = useState(false);\n  useEffect(() => {\n    if (login == false) {\n      props.history.push('/');\n    }\n  });\n\n  const mail = event => {\n    setusername(event.target.value);\n  };\n\n  const recaptchastate = () => {\n    setRecaptcha(true);\n  };\n\n  const gochangeEmail = () => {\n    props.history.push('/Changepassword');\n  };\n\n  const reset = () => {\n    if (username.indexOf('@') == -1 || username.indexOf('.com') == -1) {\n      seterrors(\"فرمت ایمیل نا معتبر است\");\n    } else if (recaptcha == false) {\n      seterrors(\"لطفا کد امنیتی را فعال کنید\");\n    } else {\n      return setShowspiner(true), fetch('http://localhost:3000/auth/password/email', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: JSON.stringify({\n          username: username\n        })\n      }).then(async response => {\n        const data = await response.json();\n        const statuse = await response.status;\n        console.log(statuse, 'jjjjj');\n\n        if (statuse == 200) {\n          Swal.fire({\n            title: 'لینک تغییر رمز به ایمیل شما ارسال شد',\n            icon: 'success',\n            confirmButtonText: 'متوجه شدم'\n          });\n          setShowspiner(false);\n          gochangeEmail();\n        } else if (statuse == 400) {\n          setShowspiner(false);\n          seterrors(data.message);\n        } else if (statuse == 500) {\n          setShowspiner(false);\n          seterrors('خطا در رتباط با سرور');\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: login ? 'none' : 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"text\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"\\u0627\\u0628\\u062A\\u062F\\u0627 \\u0628\\u0647 \\u062D\\u0633\\u0627\\u0628 \\u06A9\\u0627\\u0631\\u0628\\u0631\\u06CC \\u062E\\u0648\\u062F \\u0648\\u0627\\u0631\\u062F \\u0634\\u0648\\u06CC\\u062F\")), React.createElement(\"div\", {\n    style: [display],\n    className: \"mainreset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"errorresetpassword\",\n    style: {\n      display: errors.length < 1 ? 'none' : ''\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, errors), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\",\n    onChange: mail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"resetrecaptcha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(ReCAPTCHA, {\n    hl: \"fa\",\n    sitekey: \"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\",\n    onChange: recaptchastate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"\\u062A\\u063A\\u06CC\\u06CC\\u0631 \\u0631\\u0645\\u0632\"), React.createElement(\"div\", {\n    style: {\n      display: showspiner ? 'flex' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Spiner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }))));\n};\n\nexport default withRouter(Resetpassword);","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/components/pages/resetpassword/resetpassword.js"],"names":["React","useState","useEffect","useContext","ReCAPTCHA","Spiner","withRouter","mainContext","Swal","Resetpassword","props","login","username","setusername","errors","seterrors","recaptcha","setRecaptcha","showspiner","setShowspiner","history","push","mail","event","target","value","recaptchastate","gochangeEmail","reset","indexOf","fetch","method","headers","body","JSON","stringify","then","response","data","json","statuse","status","console","log","fire","title","icon","confirmButtonText","message","catch","error","display","justifyContent","alignItems","marginTop","length"],"mappings":"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","sourcesContent":["import React, {useState,useEffect,useContext } from 'react';\r\nimport './resetpassword.css';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport Spiner from './../../spinner/spinner';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {mainContext} from './../../../context/mainContext';\r\n\r\nimport Swal from 'sweetalert2'\r\nconst Resetpassword=(props)=>{\r\n  const {login}=useContext(mainContext)\r\n  const [username, setusername] = useState('');\r\n  const [errors, seterrors] = useState('');\r\n\r\n  const [recaptcha,setRecaptcha]=useState(false);\r\n  const [showspiner,setShowspiner]=useState(false);\r\n  useEffect(()=>{\r\n    if(login==false){\r\n      props.history.push('/')\r\n    }\r\n  })\r\n  const mail=(event)=>{\r\n    setusername(event.target.value)\r\n  }\r\n  const recaptchastate=()=>{\r\n    setRecaptcha(true)\r\n  }\r\n  const gochangeEmail=()=>{\r\n    props.history.push('/Changepassword');\r\n  \r\n  }\r\n  const reset=()=>{\r\n    if(username.indexOf('@')==-1 || username.indexOf('.com')==-1 ){\r\n      seterrors(\"فرمت ایمیل نا معتبر است\")\r\n     \r\n    }\r\n    else if(recaptcha== false){\r\n      seterrors(\"لطفا کد امنیتی را فعال کنید\")\r\n   \r\n    }else{\r\n      \r\n      \r\n      return(\r\n        setShowspiner(true),\r\n      \r\n        fetch('http://localhost:3000/auth/password/email',{\r\n        method:'POST',\r\n        headers:{\r\n          'Accept':'application/json',\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body:JSON.stringify(\r\n          {\r\n            username:username,\r\n            \r\n          }\r\n          )\r\n        })  \r\n        .then(async (response)=>{\r\n          const data = await response.json();\r\n          const statuse=await response.status;\r\n          console.log(statuse,'jjjjj')\r\n          if(statuse == 200){\r\n            Swal.fire({\r\n              title: 'لینک تغییر رمز به ایمیل شما ارسال شد',\r\n              icon: 'success',\r\n              confirmButtonText: 'متوجه شدم',\r\n            })\r\n            setShowspiner(false)\r\n            \r\n            gochangeEmail()\r\n            \r\n          }else if(statuse == 400){\r\n            setShowspiner(false)\r\n            seterrors(data.message)\r\n          \r\n          }else if(statuse == 500){\r\n            setShowspiner(false)\r\n           \r\n            seterrors('خطا در رتباط با سرور')\r\n          }\r\n        }\r\n        \r\n        )\r\n        .catch((error)=>{console.error(error)})\r\n        )\r\n      }\r\n    }\r\n    return(\r\n      <div>\r\n      <div style={{display:login?'none':'flex',justifyContent:'center',alignItems:'center',marginTop:20}}>\r\n      <text>ابتدا به حساب کاربری خود وارد شوید</text>\r\n                        </div>\r\n      <div style={[display:lo]} className=\"mainreset\">\r\n      <div className=\"errorresetpassword\" style={{display:errors.length<1?'none':'',}}>\r\n      {errors}\r\n      </div>\r\n      <input type=\"email\" placeholder=\"ایمیل\" onChange={mail} />\r\n      <div className=\"resetrecaptcha\">\r\n      <ReCAPTCHA\r\n      hl={\"fa\"}\r\n      sitekey=\"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\"\r\n      onChange={recaptchastate}\r\n      />\r\n      </div>\r\n      <button onClick={reset}>\r\n      تغییر رمز\r\n      </button>\r\n      <div style={{display:showspiner?'flex':'none'}}>\r\n      <Spiner/>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      )\r\n    }\r\n    export default withRouter(Resetpassword) ;"]},"metadata":{},"sourceType":"module"}