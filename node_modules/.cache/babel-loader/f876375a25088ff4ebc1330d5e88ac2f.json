{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\components\\\\pages\\\\resetpassword\\\\resetpassword.js\";\nimport React, { useState, useEffect } from 'react';\nimport './resetpassword.css';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport Spiner from './../../spinner/spinner';\n\nconst Resetpassword = props => {\n  const [username, setusername] = useState('');\n  const [errors, seterrors] = useState('');\n  const [showerror, setshowerror] = useState('none');\n  const [recaptcha, setRecaptcha] = useState(false);\n  const [showspiner, setShowspiner] = useState(false);\n\n  const mail = event => {\n    setusername(event.target.value);\n  };\n\n  const recaptchastate = () => {\n    setRecaptcha(true);\n  };\n\n  const gochangeEmail = () => {\n    props.h.push('/Changepassword');\n  };\n\n  const reset = () => {\n    if (username.indexOf('@') == -1 || username.indexOf('.com') == -1) {\n      seterrors(\"فرمت ایمیل نا معتبر است\");\n      setshowerror('flex');\n    } else if (recaptcha == false) {\n      seterrors(\"لطفا کد امنیتی را فعال کنید\");\n      setshowerror('flex');\n    } else {\n      return setShowspiner(true), setshowerror('none'), fetch('http://localhost:3000/auth/password/email', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: JSON.stringify({\n          email: username\n        })\n      }).then(async response => {\n        const data = await response.json();\n        const statuse = await response.status;\n\n        if (statuse == 200) {\n          setShowspiner(false);\n          setshowerror('none');\n          gochangeEmail();\n        } else if (statuse == 400) {\n          setShowspiner(false);\n          seterrors(data.message);\n          setshowerror('flex');\n        } else if (statuse == 500) {\n          setShowspiner(false);\n          setshowerror('flex');\n          seterrors('خطا در رتباط با سرور');\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"mainreset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"error\",\n    style: {\n      display: errors.length < 1 ? 'none' : ''\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, errors), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\",\n    onChange: mail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"recaptcha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(ReCAPTCHA, {\n    hl: \"fa\",\n    sitekey: \"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\",\n    onChange: recaptchastate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"\\u062A\\u063A\\u06CC\\u06CC\\u0631 \\u0631\\u0645\\u0632\"), React.createElement(\"div\", {\n    style: {\n      display: showspiner ? 'flex' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Spiner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })));\n};\n\nexport default Resetpassword;","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/components/pages/resetpassword/resetpassword.js"],"names":["React","useState","useEffect","ReCAPTCHA","Spiner","Resetpassword","props","username","setusername","errors","seterrors","showerror","setshowerror","recaptcha","setRecaptcha","showspiner","setShowspiner","mail","event","target","value","recaptchastate","gochangeEmail","h","push","reset","indexOf","fetch","method","headers","body","JSON","stringify","email","then","response","data","json","statuse","status","message","catch","error","console","display","length"],"mappings":"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","sourcesContent":["import React, {useState,useEffect } from 'react';\r\nimport './resetpassword.css';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport Spiner from './../../spinner/spinner';\r\n\r\nconst Resetpassword=(props)=>{\r\n    const [username, setusername] = useState('');\r\n    const [errors, seterrors] = useState('');\r\n    const [showerror,setshowerror]=useState('none')\r\n    const [recaptcha,setRecaptcha]=useState(false);\r\n    const [showspiner,setShowspiner]=useState(false);\r\n    const mail=(event)=>{\r\n        setusername(event.target.value)\r\n    }\r\n    const recaptchastate=()=>{\r\n      setRecaptcha(true)\r\n     }\r\n     const gochangeEmail=()=>{\r\n         props.h.push('/Changepassword')\r\n     }\r\n     const reset=()=>{\r\n         if(username.indexOf('@')==-1 || username.indexOf('.com')==-1 ){\r\n            seterrors(\"فرمت ایمیل نا معتبر است\")\r\n            setshowerror('flex')\r\n         }\r\n         else if(recaptcha== false){\r\n          seterrors(\"لطفا کد امنیتی را فعال کنید\")\r\n          setshowerror('flex')\r\n         }else{\r\n         \r\n       \r\n        return(\r\n          setShowspiner(true),\r\n          setshowerror('none'),\r\n            fetch('http://localhost:3000/auth/password/email',{\r\n                     method:'POST',\r\n                     headers:{\r\n                       'Accept':'application/json',\r\n                       'Content-Type': 'application/x-www-form-urlencoded'\r\n                     },\r\n                     body:JSON.stringify(\r\n                     {\r\n                         email:username,\r\n                \r\n                       }\r\n                      )\r\n                   })  \r\n                    .then(async (response)=>{\r\n                     const data = await response.json();\r\n                     const statuse=await response.status;\r\n                   \r\n                   if(statuse == 200){\r\n                    setShowspiner(false)\r\n                  setshowerror('none')\r\n                  gochangeEmail()\r\n                \r\n                   }else if(statuse == 400){\r\n                    setShowspiner(false)\r\n                    seterrors(data.message)\r\n                    setshowerror('flex')\r\n                   }else if(statuse == 500){\r\n                    setShowspiner(false)\r\n                 \r\n                    setshowerror('flex')\r\n                    seterrors('خطا در رتباط با سرور')\r\n                   }\r\n                   }\r\n                  \r\n                  )\r\n                   .catch((error)=>{console.error(error)})\r\n                   )\r\n                }\r\n     }\r\n    return(\r\n        <div className=\"mainreset\">\r\n<div className=\"error\" style={{display:errors.length<1?'none':'',}}>\r\n{errors}\r\n</div>\r\n     <input type=\"email\" placeholder=\"ایمیل\" onChange={mail} />\r\n    <div className=\"recaptcha\">\r\n    <ReCAPTCHA\r\n    hl={\"fa\"}\r\n    sitekey=\"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\"\r\n    onChange={recaptchastate}\r\n  />\r\n </div>\r\n<button onClick={reset}>\r\n تغییر رمز\r\n</button>\r\n<div style={{display:showspiner?'flex':'none'}}>\r\n  <Spiner/>\r\n</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Resetpassword;"]},"metadata":{},"sourceType":"module"}