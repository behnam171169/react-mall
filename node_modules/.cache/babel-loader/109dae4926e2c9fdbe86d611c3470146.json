{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\context\\\\mainContext.js\";\nimport React, { Component, useState, useEffect } from 'react';\nexport const mainContext = React.createContext();\n\nconst MainContextProvider = props => {\n  useEffect(() => {\n    const tokenn = localStorage.getItem('token');\n    se;\n    fetch('http://localhost:3000/auth/login/token', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'headers': token\n      }\n    }).then(async response => {\n      const data = await response.json();\n      const statuse = await response.status;\n      console.log(data, 'uuuu');\n\n      if (statuse == 200) {\n        setlogin(true);\n        setusername(data.name);\n      } else {\n        setlogin(false);\n      }\n    });\n  });\n  const [login, setlogin] = useState(false);\n  const [adminpanel, setadminpanel] = useState(false);\n  const [username, setusername] = useState('');\n  const [userid, setuserid] = useState('');\n  const [useremail, setuseremail] = useState('');\n  const [token, settoken] = useState('');\n\n  const admin = () => {\n    setadminpanel(true);\n  };\n\n  return React.createElement(mainContext.Provider, {\n    value: {\n      adminpanel,\n      admin,\n      login,\n      username\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default MainContextProvider;","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/context/mainContext.js"],"names":["React","Component","useState","useEffect","mainContext","createContext","MainContextProvider","props","tokenn","localStorage","getItem","se","fetch","method","headers","token","then","response","data","json","statuse","status","console","log","setlogin","setusername","name","login","adminpanel","setadminpanel","username","userid","setuserid","useremail","setuseremail","settoken","admin","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,EAAmCC,SAAnC,QAAoD,OAApD;AACA,OAAO,MAAMC,WAAW,GAACJ,KAAK,CAACK,aAAN,EAAlB;;AACP,MAAMC,mBAAmB,GAAEC,KAAD,IAAS;AACjCJ,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMK,MAAM,GAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAb;AACAC,IAAAA,EAAE;AACFC,IAAAA,KAAK,CAAC,wCAAD,EAA0C;AAC7CC,MAAAA,MAAM,EAAC,MADsC;AAE7CC,MAAAA,OAAO,EAAC;AACN,kBAAS,kBADH;AAEN,wBAAgB,mCAFV;AAGN,mBAAUC;AAHJ;AAFqC,KAA1C,CAAL,CAOCC,IAPD,CAOM,MAAOC,QAAP,IAAkB;AACxB,YAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AACA,YAAMC,OAAO,GAAC,MAAMH,QAAQ,CAACI,MAA7B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAiB,MAAjB;;AACA,UAAGE,OAAO,IAAE,GAAZ,EAAgB;AACdI,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAC,QAAAA,WAAW,CAACP,IAAI,CAACQ,IAAN,CAAX;AACD,OAHD,MAGK;AACHF,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACH,KAjBE;AAiBA,GApBO,CAAT;AAqBD,QAAM,CAACG,KAAD,EAAQH,QAAR,IAAoBtB,QAAQ,CAAC,KAAD,CAAlC;AACC,QAAM,CAAC0B,UAAD,EAAaC,aAAb,IAA8B3B,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAK,CAAC4B,QAAD,EAAUL,WAAV,IAAuBvB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC6B,MAAD,EAASC,SAAT,IAAsB9B,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC+B,SAAD,EAAYC,YAAZ,IAA4BhC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAK,CAACa,KAAD,EAAOoB,QAAP,IAAiBjC,QAAQ,CAAC,EAAD,CAA9B;;AACA,QAAMkC,KAAK,GAAC,MAAI;AACdP,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAIE,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACD,MAAAA,UAAD;AAAYQ,MAAAA,KAAZ;AAAkBT,MAAAA,KAAlB;AAAwBG,MAAAA;AAAxB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,KAAK,CAAC8B,QADT,CADJ;AAKH,CArCD;;AAwCA,eAAe/B,mBAAf","sourcesContent":["import React, { Component,useState,useEffect } from 'react';\r\nexport const mainContext=React.createContext();\r\nconst MainContextProvider=(props)=>{\r\n  useEffect(()=>{\r\n    const tokenn=localStorage.getItem('token');\r\n    se\r\n    fetch('http://localhost:3000/auth/login/token',{\r\n      method:'POST',\r\n      headers:{\r\n        'Accept':'application/json',\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        'headers':token\r\n      },\r\n  }).then(async (response)=>{\r\n    const data = await response.json();\r\n    const statuse=await response.status;\r\n    console.log(data,'uuuu')\r\n    if(statuse==200){\r\n      setlogin(true)\r\n      setusername(data.name)\r\n    }else{\r\n      setlogin(false)\r\n    }\r\n })})\r\n const [login, setlogin] = useState(false)\r\n  const [adminpanel, setadminpanel] = useState(false)\r\n  const[username,setusername]=useState('');\r\n  const [userid, setuserid] = useState('');\r\n  const [useremail, setuseremail] = useState('');\r\n  const[token,settoken]=useState('');\r\n  const admin=()=>{\r\n    setadminpanel(true)\r\n  }\r\n\r\n    return(\r\n        <mainContext.Provider value={{adminpanel,admin,login,username}}>\r\n          {props.children}\r\n        </mainContext.Provider>\r\n    )\r\n}\r\n \r\n\r\nexport default MainContextProvider;"]},"metadata":{},"sourceType":"module"}