{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\components\\\\pages\\\\login\\\\login.js\";\nimport React, { Component, useState, useContext } from 'react';\nimport './login.css';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { Link } from 'react-router-dom';\nimport Spiner from './../../spinner/spinner';\n\nconst Login = props => {\n  const [username, setusername] = useState('');\n  const [password, setpassword] = useState('');\n  const [errors, seterrors] = useState('');\n  const [recaptcha, setRecaptcha] = useState('');\n  const [check, setcheck] = useState(false);\n  const [showspiner, setShowspiner] = useState(false);\n\n  const pass = event => {\n    setpassword(event.target.value);\n  };\n\n  const mail = event => {\n    setusername(event.target.value);\n  };\n\n  const recaptchastate = () => {\n    setRecaptcha(true);\n  };\n\n  const gohome = () => {\n    props.history.push('/');\n  };\n\n  const goregister = () => {\n    props.history.push('/register');\n  };\n\n  const checkBox = () => {\n    setcheck(!check);\n  };\n\n  const login = props => {\n    let err = [];\n\n    if (username.length < 1 || password.length < 1) {\n      err.push(\"لطفا همه فیلد ها را پر کنید\");\n      seterrors(err);\n    } else if (password.length < 5) {\n      err.push(\"تعداد ارقام پسورد حداقل پنج رقم می باشد\");\n      seterrors(err);\n    } else if (username.indexOf('@') == -1 || username.indexOf('.') == -1) {\n      err.push(\"فرمت ایمیل معتبر نمی باشد\");\n      seterrors(err);\n    } else if (recaptcha == false) {\n      err.push(\"گزینه امنتی را فعال کنید\");\n      seterrors(err);\n    } else {\n      seterrors('');\n      setShowspiner(true);\n      return fetch('http://localhost:3000/auth/login', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password,\n          check: check\n        })\n      }).then(async response => {\n        const data = await response.json();\n        const status = await response.status;\n        console.log(data);\n\n        if (status == 200) {\n          setShowspiner(false);\n          console.log(data, 'llll');\n          localStorage.setItem('user', data.userid);\n          localStorage.setItem('admin', data.admin);\n          localStorage.setItem('token', data.token);\n          gohome();\n          window.location.reload(true);\n        } else if (status == 400) {\n          setShowspiner(false);\n          seterrors(data.message);\n        } else if (status == 500) {\n          setShowspiner(false);\n          seterrors('خطا در ارتباط با سرور');\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"mainlogin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"loginerror\",\n    style: {\n      display: errors.length < 1 ? 'none' : ''\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, errors), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\",\n    onChange: mail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"\\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631\",\n    onChange: pass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"recaptcha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(ReCAPTCHA, {\n    hl: \"fa\",\n    sitekey: \"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\",\n    onChange: recaptchastate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      display: showspiner ? 'flex' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Spiner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"remember\",\n    onChange: checkBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"\\u0648\\u0631\\u0648\\u062F\"), React.createElement(\"div\", {\n    className: \"cl\",\n    style: {\n      display: 'flex',\n      justifyContent: 'spacebetween'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: './reset',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"\\u0641\\u0631\\u0627\\u0645\\u0648\\u0634\\u06CC \\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631\"), React.createElement(\"text\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"\\u06A9\\u0627\\u0631\\u0628\\u0631 \\u062C\\u062F\\u06CC\\u062F \\u0647\\u0633\\u062A\\u06CC\\u062F\", React.createElement(Link, {\n    onClick: goregister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"\\u062B\\u0628\\u062A \\u0646\\u0627\\u0645 \\u06A9\\u0646\\u06CC\\u062F\"))), \"P\");\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/components/pages/login/login.js"],"names":["React","Component","useState","useContext","ReCAPTCHA","Link","Spiner","Login","props","username","setusername","password","setpassword","errors","seterrors","recaptcha","setRecaptcha","check","setcheck","showspiner","setShowspiner","pass","event","target","value","mail","recaptchastate","gohome","history","push","goregister","checkBox","login","err","length","indexOf","fetch","method","headers","body","JSON","stringify","then","response","data","json","status","console","log","localStorage","setItem","userid","admin","token","window","location","reload","message","catch","error","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component,useState,useContext } from 'react';\r\nimport './login.css';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { Link } from 'react-router-dom';\r\nimport Spiner from './../../spinner/spinner';\r\nconst Login=(props)=>{\r\n    const [username, setusername] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [errors, seterrors] = useState('');\r\n    const [recaptcha,setRecaptcha]=useState('');\r\n    const [check,setcheck]=useState(false);\r\n    const [showspiner,setShowspiner]=useState(false);\r\n    const pass=(event)=>{\r\n        setpassword(event.target.value)\r\n    }\r\n    const mail=(event)=>{\r\n        setusername(event.target.value)\r\n    }\r\n    const recaptchastate=()=>{\r\n      setRecaptcha(true)\r\n     }\r\n     const gohome=()=>{\r\n      props.history.push('/');\r\n         }\r\n        const goregister=()=>{\r\n          props.history.push('/register');\r\n        }\r\n       const checkBox=()=>{\r\n        setcheck(!check)\r\n       }\r\n\r\n     \r\n    const login=(props)=>{\r\n        let err=[];\r\n        if(username.length<1 || password.length<1){\r\n   err.push(\"لطفا همه فیلد ها را پر کنید\");\r\nseterrors(err)\r\n        }else if(password.length<5){\r\n          err.push(\"تعداد ارقام پسورد حداقل پنج رقم می باشد\");\r\n        \r\n          seterrors(err)\r\n        }else if(username.indexOf('@')== -1 || username.indexOf('.')== -1){\r\n          err.push(\"فرمت ایمیل معتبر نمی باشد\");\r\n          seterrors(err)\r\n        }\r\n        else if(recaptcha == false){\r\n         err.push(\"گزینه امنتی را فعال کنید\");\r\n         seterrors(err)\r\n       }\r\n       else{\r\n        seterrors('')\r\n        setShowspiner(true)\r\n        return(\r\n            fetch('http://localhost:3000/auth/login',{\r\n                     method:'POST',\r\n                     headers:{\r\n                       'Accept':'application/json',\r\n                       'Content-Type': 'application/x-www-form-urlencoded'\r\n                     },\r\n                     body:JSON.stringify(\r\n                     {\r\n                         username:username,\r\n                          password:password,\r\n                          check:check\r\n                       }\r\n                      )\r\n                   })   .then(async (response)=>{\r\n                    \r\n                     const data = await response.json();\r\n                     \r\n                     const status=await response.status;\r\n                   console.log(data)\r\n                   if(status == 200){\r\n                     setShowspiner(false)\r\n                     console.log(data,'llll')\r\n                    localStorage.setItem('user',data.userid)\r\n                     localStorage.setItem('admin',data.admin)\r\n                    localStorage.setItem('token', data.token)\r\n                    gohome()\r\n                    window.location.reload(true);\r\n                   }else if(status == 400){\r\n                    setShowspiner(false)\r\n                    seterrors(data.message)\r\n                   }else if(status == 500){\r\n                    setShowspiner(false)\r\n                    seterrors('خطا در ارتباط با سرور')\r\n                   }\r\n                   }\r\n                  )\r\n                   .catch((error)=>{console.error(error)})\r\n                   )\r\n                }\r\n    }\r\n    return(\r\n        <div className=\"mainlogin\">\r\n<div className=\"loginerror\" style={{display:errors.length<1?'none':'',}}>\r\n{errors}\r\n</div>\r\n     <input type=\"email\" placeholder=\"ایمیل\" onChange={mail} />\r\n    <input type=\"password\" placeholder=\"رمز عبور\" onChange={pass} />\r\n    <div className=\"recaptcha\">\r\n    <ReCAPTCHA\r\n    hl={\"fa\"}\r\n    sitekey=\"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\"\r\n    onChange={recaptchastate}\r\n  />\r\n </div>\r\n <div style={{display:showspiner?'flex':'none'}}>\r\n   <Spiner/>\r\n </div>\r\n <div className=\"checkbox\">\r\n <input type=\"checkbox\" name=\"remember\" onChange={checkBox} />\r\n </div>\r\n<button onClick={login}>\r\n  ورود\r\n</button>\r\n  <div className=\"cl\" style={{display:'flex',justifyContent:'spacebetween'}}>\r\n    <Link to={'./reset'}>فراموشی رمز عبور</Link>\r\n    <text >کاربر جدید هستید<Link onClick={goregister}>ثبت نام کنید</Link></text>\r\n  </div>P\r\n        </div>\r\n    )\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}