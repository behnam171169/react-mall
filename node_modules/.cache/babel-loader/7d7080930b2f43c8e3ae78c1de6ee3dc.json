{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\components\\\\pages\\\\register\\\\register.js\";\nimport React, { Component, useState } from 'react';\nimport './register.css';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\n\nconst Register = props => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState('');\n  const [recaptcha, setRecaptcha] = useState(false);\n\n  const gohome = () => {\n    props.history.push('/');\n  };\n\n  const namesave = event => {\n    setName(event.target.value);\n  };\n\n  const emailsave = event => {\n    setEmail(event.target.value);\n  };\n\n  const passwordsave = event => {\n    setPassword(event.target.value);\n  };\n\n  const recaptchastate = () => {\n    setRecaptcha(true);\n  };\n\n  function datasave() {\n    let err = [];\n\n    if (name.length < 1 || email.length < 1) {\n      err.push(\"لطفا همه فیلد ها را پر کنید\");\n      setErrors(err);\n    } else if (password.length < 5) {\n      err.push(\"تعداد ارقام پسورد حداقل پنج رقم می باشد\");\n      setErrors(err);\n    } else if (email.indexOf('@') == -1 || email.indexOf('.') == -1) {\n      err.push(\"فرمت ایمیل معتبر نمی باشد\");\n      setErrors(err);\n    } else if (recaptcha == false) {\n      err.push(\"گزینه امنتی را فعال کنید\");\n      setErrors(err);\n    } else {\n      setErrors('');\n      return fetch('http://localhost:3000/auth/register', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: JSON.stringify({\n          name: name,\n          email: email,\n          password: password\n        })\n      }).then(async response => {\n        const data = await response.json();\n        const statuse = await response;\n\n        if (statuse == 200) {\n          gohome();\n          console.log('okkkk');\n        } else if (statuse == 400) {\n          setErrors(data.message);\n        }\n      }) // .then((response)=>response.json())\n      // .then((responseJson)=>{return\n      //   ({status: response.status, body:responseJson}).then(object=>{\n      //     console.log(object)\n      //   })\n      // })\n      .catch(error => {\n        console.error(error);\n      });\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"mainregister\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"error\",\n    style: {\n      display: errors.length < 1 ? 'none' : ''\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, errors), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"\\u0646\\u0627\\u0645 \\u0648 \\u0646\\u0627\\u0645 \\u062E\\u0627\\u0646\\u0648\\u0627\\u062F\\u06AF\\u06CC\",\n    onChange: namesave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\",\n    onChange: emailsave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"\\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631\",\n    onChange: passwordsave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"text\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, recaptcha), React.createElement(\"div\", {\n    className: \"recaptcha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(ReCAPTCHA, {\n    hl: \"fa\",\n    sitekey: \"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\",\n    onChange: recaptchastate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: datasave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"\\u062B\\u0628\\u062A \\u0646\\u0627\\u0645\"), React.createElement(\"text\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"\\u0642\\u0628\\u0644\\u0627 \\u062B\\u0628\\u062A \\u0646\\u0627\\u0645 \\u06A9\\u0631\\u062F\\u0647 \\u0627\\u06CC\\u062F\\u061F\", React.createElement(Link, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"\\u0648\\u0627\\u0631\\u062F \\u0634\\u0648\\u06CC\\u062F\")));\n};\n\nexport default withRouter(Register);","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/components/pages/register/register.js"],"names":["React","Component","useState","ReCAPTCHA","Link","withRouter","Register","props","name","setName","email","setEmail","password","setPassword","errors","setErrors","recaptcha","setRecaptcha","gohome","history","push","namesave","event","target","value","emailsave","passwordsave","recaptchastate","datasave","err","length","indexOf","fetch","method","headers","body","JSON","stringify","then","response","data","json","statuse","console","log","message","catch","error","display"],"mappings":"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","sourcesContent":["import React, { Component,useState } from 'react'\r\nimport './register.css';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { Link } from 'react-router-dom';\r\nimport {withRouter} from 'react-router-dom';\r\nconst Register=(props)=>{\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n   const [errors,setErrors]=useState('');\r\n   const [recaptcha,setRecaptcha]=useState(false);\r\n   const gohome=()=>{\r\n \r\n    props.history.push('/');\r\n       }\r\n   const namesave=(event)=>{\r\n    setName(event.target.value)\r\n   }\r\n   const emailsave=(event)=>{\r\n    setEmail(event.target.value)\r\n   }\r\n   const passwordsave=(event)=>{\r\n    setPassword(event.target.value)\r\n   }\r\n   const recaptchastate=()=>{\r\n    setRecaptcha(true)\r\n   }\r\n   function datasave(){\r\n     let err=[];\r\n     if(name.length<1 || email.length<1){\r\nerr.push(\"لطفا همه فیلد ها را پر کنید\");\r\nsetErrors(err)\r\n     }else if(password.length<5){\r\n       err.push(\"تعداد ارقام پسورد حداقل پنج رقم می باشد\");\r\n       setErrors(err)\r\n     }else if(email.indexOf('@')== -1 || email.indexOf('.')== -1){\r\n       err.push(\"فرمت ایمیل معتبر نمی باشد\");\r\n       setErrors(err)\r\n     }else if(recaptcha == false){\r\n      err.push(\"گزینه امنتی را فعال کنید\");\r\n      setErrors(err)\r\n    }else{\r\n      setErrors('')\r\n      return(\r\n\r\n   fetch('http://localhost:3000/auth/register',{\r\n       \r\n         \r\n            method:'POST',\r\n            headers:{\r\n              'Accept':'application/json',\r\n              'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body:JSON.stringify(\r\n            {\r\n                name:name,\r\n                email:email,\r\n                 password:password \r\n              }\r\n             )\r\n          })   .then(async (response)=>{\r\n            const data = await response.json();\r\n            const statuse=await response;\r\n          if(statuse ==200){\r\n        gohome()\r\n     console.log('okkkk')\r\n          }else if (statuse == 400){\r\n            setErrors(data.message)\r\n\r\n          }\r\n          }\r\n         \r\n         )\r\n          \r\n          // .then((response)=>response.json())\r\n          // .then((responseJson)=>{return\r\n          //   ({status: response.status, body:responseJson}).then(object=>{\r\n          //     console.log(object)\r\n          //   })\r\n\r\n          // })\r\n          \r\n          .catch((error)=>{console.error(error)})\r\n          )\r\n     }\r\n \r\n   }\r\n    return(\r\n        <div className=\"mainregister\">\r\n<div className=\"error\" style={{display:errors.length<1?'none':'',}}>\r\n{errors}\r\n</div>\r\n \r\n     <input type=\"text\" placeholder=\"نام و نام خانوادگی\" onChange={namesave} />\r\n\r\n     <input type=\"email\" placeholder=\"ایمیل\"  onChange={emailsave}/>\r\n    <input type=\"password\" placeholder=\"رمز عبور\" onChange={passwordsave}/>\r\n    <text>\r\n    {recaptcha}\r\n    </text>\r\n    <div className=\"recaptcha\">\r\n    <ReCAPTCHA\r\n    hl={\"fa\"}\r\n    sitekey=\"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\"\r\n    onChange={recaptchastate}\r\n  />\r\n </div>\r\n<button onClick={datasave}>\r\n  ثبت نام\r\n</button>\r\n\r\n    <text>قبلا ثبت نام کرده اید؟<Link>وارد شوید</Link></text>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(Register);"]},"metadata":{},"sourceType":"module"}