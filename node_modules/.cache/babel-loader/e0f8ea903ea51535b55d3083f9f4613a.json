{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\context\\\\mainContext.js\";\nimport React, { Component, useState, useEffect } from 'react';\nexport const mainContext = React.createContext();\n\nconst MainContextProvider = props => {\n  const checkadmin = localStorage.getItem('admin');\n  const token = localStorage.getItem('token');\n  const user = localStorage.getItem('user');\n  useEffect(() => {\n    // settoken(localStorage.getItem('token'))\n    setadmin(checkadmin);\n    setuserid(user);\n    fetch('http://localhost:3000/auth/login/token', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'headers': token\n      }\n    }).then(async response => {\n      const data = await response.json();\n      const status = await response.status;\n      console.log(data, 'uuukkjju');\n      console.log(status);\n\n      if (status == 200) {\n        setlogin(true);\n        setusername(data.name);\n      } else {\n        setlogin(false);\n      }\n    });\n  }, []);\n  const [login, setlogin] = useState(false);\n  const [admin, setadmin] = useState(false);\n  const [username, setusername] = useState('');\n  const [userid, setuserid] = useState('');\n  const [customertowns, setcustomertowns] = useState('ุง');\n\n  const towns = text => {\n    setcustomertowns(text);\n  };\n\n  return React.createElement(mainContext.Provider, {\n    value: {\n      login,\n      username,\n      admin,\n      userid,\n      towns,\n      customertowns\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default MainContextProvider;","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/context/mainContext.js"],"names":["React","Component","useState","useEffect","mainContext","createContext","MainContextProvider","props","checkadmin","localStorage","getItem","token","user","setadmin","setuserid","fetch","method","headers","then","response","data","json","status","console","log","setlogin","setusername","name","login","admin","username","userid","customertowns","setcustomertowns","towns","text","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,EAAmCC,SAAnC,QAAoD,OAApD;AACA,OAAO,MAAMC,WAAW,GAACJ,KAAK,CAACK,aAAN,EAAlB;;AACP,MAAMC,mBAAmB,GAAEC,KAAD,IAAS;AACjC,QAAMC,UAAU,GAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAjB;AACA,QAAMC,KAAK,GAACF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,QAAME,IAAI,GAACH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;AAEAP,EAAAA,SAAS,CAAC,MAAI;AACZ;AACAU,IAAAA,QAAQ,CAACL,UAAD,CAAR;AACAM,IAAAA,SAAS,CAACF,IAAD,CAAT;AACAG,IAAAA,KAAK,CAAC,wCAAD,EAA0C;AAC7CC,MAAAA,MAAM,EAAC,MADsC;AAE7CC,MAAAA,OAAO,EAAC;AACN,kBAAS,kBADH;AAEN,wBAAgB,mCAFV;AAGN,mBAAUN;AAHJ;AAFqC,KAA1C,CAAL,CAOCO,IAPD,CAOM,MAAOC,QAAP,IAAkB;AACxB,YAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AACA,YAAMC,MAAM,GAAC,MAAMH,QAAQ,CAACG,MAA5B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAiB,UAAjB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAGA,MAAM,IAAE,GAAX,EAAe;AAEbG,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAC,QAAAA,WAAW,CAACN,IAAI,CAACO,IAAN,CAAX;AACD,OAJD,MAIK;AACHF,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACH,KAnBE;AAmBA,GAvBO,EAuBN,EAvBM,CAAT;AAwBD,QAAM,CAACG,KAAD,EAAQH,QAAR,IAAoBvB,QAAQ,CAAC,KAAD,CAAlC;AACC,QAAM,CAAC2B,KAAD,EAAQhB,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAK,CAAC4B,QAAD,EAAUJ,WAAV,IAAuBxB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC6B,MAAD,EAASjB,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC8B,aAAD,EAAgBC,gBAAhB,IAAoC/B,QAAQ,CAAC,GAAD,CAAlD;;AACA,QAAMgC,KAAK,GAAEC,IAAD,IAAQ;AACtBF,IAAAA,gBAAgB,CAACE,IAAD,CAAhB;AACG,GAFD;;AAIE,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACP,MAAAA,KAAD;AAAOE,MAAAA,QAAP;AAAgBD,MAAAA,KAAhB;AAAsBE,MAAAA,MAAtB;AAA6BG,MAAAA,KAA7B;AAAmCF,MAAAA;AAAnC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzB,KAAK,CAAC6B,QADT,CADJ;AAKH,CA3CD;;AA8CA,eAAe9B,mBAAf","sourcesContent":["import React, { Component,useState,useEffect } from 'react';\r\nexport const mainContext=React.createContext();\r\nconst MainContextProvider=(props)=>{\r\n  const checkadmin=localStorage.getItem('admin');\r\n  const token=localStorage.getItem('token');\r\n  const user=localStorage.getItem('user');\r\n  \r\n  useEffect(()=>{\r\n    // settoken(localStorage.getItem('token'))\r\n    setadmin(checkadmin)\r\n    setuserid(user)\r\n    fetch('http://localhost:3000/auth/login/token',{\r\n      method:'POST',\r\n      headers:{\r\n        'Accept':'application/json',\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        'headers':token\r\n      },\r\n  }).then(async (response)=>{\r\n    const data = await response.json();\r\n    const status=await response.status;\r\n    console.log(data,'uuukkjju')\r\n    console.log(status)\r\n    if(status==200){\r\n\r\n      setlogin(true)\r\n      setusername(data.name)\r\n    }else{\r\n      setlogin(false)\r\n    }\r\n })},[])\r\n const [login, setlogin] = useState(false)\r\n  const [admin, setadmin] = useState(false)\r\n  const[username,setusername]=useState('');\r\n  const [userid, setuserid] = useState('');\r\n  const [customertowns, setcustomertowns] = useState('ุง');\r\n  const towns=(text)=>{\r\nsetcustomertowns(text)\r\n  }\r\n \r\n    return(\r\n        <mainContext.Provider value={{login,username,admin,userid,towns,customertowns}}>\r\n          {props.children}\r\n        </mainContext.Provider>\r\n    )\r\n}\r\n \r\n\r\nexport default MainContextProvider;"]},"metadata":{},"sourceType":"module"}