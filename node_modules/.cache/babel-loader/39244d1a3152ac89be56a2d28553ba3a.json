{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\components\\\\pages\\\\changepassword\\\\changepassword.js\";\nimport React, { useState } from 'react';\nimport './changepassword.css';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport Spiner from './../../spinner/spinner';\n\nconst Changepassword = props => {\n  const [username, setusername] = useState('');\n  const [password, setpassword] = useState('');\n  const [errors, seterrors] = useState('');\n  const [recaptcha, setRecaptcha] = useState('');\n  const [showspiner, setShowspiner] = useState(false);\n  const url = window.location.pathname;\n  const curenturl = url.slice(16);\n\n  const mail = event => {\n    setusername(event.target.value);\n  };\n\n  const pass = event => {\n    setpassword(event.target.value);\n  };\n\n  const recaptchastate = () => {\n    setRecaptcha(true);\n  };\n\n  const gohome = () => {\n    props.history.replace('/');\n  };\n\n  const changepass = () => {\n    if (username.indexOf('.com') == -1 || username.indexOf('@') == -1) {\n      seterrors('فرمت ایمیل نامعتبر است');\n    } else if (password.length < 5) {\n      seterrors('تعدادارقام پسوورد نباید کمتر از 5باشد');\n    } else if (recaptcha == false) {} else {\n      return setShowspiner(true), fetch('http://localhost:3000/auth/password/reset', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: JSON.stringify({\n          email: username,\n          password: password,\n          token: curenturl\n        })\n      }).then(async response => {\n        const data = await response.json();\n        const statuse = await response.status;\n\n        if (statuse == 200) {\n          setShowspiner(false);\n          gohome();\n        } else if (statuse == 400) {\n          seterrors(data.message);\n          setShowspiner(false);\n        } else if (statuse == 500) {\n          setShowspiner(false);\n          seterrors('خطادر ارتباط با سرور');\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"mainreset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"error\",\n    style: {\n      display: errors.length < 1 ? 'none' : ''\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, errors), React.createElement(\"text\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, curenturl), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\",\n    onChange: mail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"\\u067E\\u0633\\u0648\\u0648\\u0631\\u062F\",\n    onChange: pass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"recaptcha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(ReCAPTCHA, {\n    hl: \"fa\",\n    sitekey: \"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\",\n    onChange: recaptchastate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      display: showspiner\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Spiner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: changepass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"\\u0628\\u0627\\u0632\\u06CC\\u0627\\u0628\\u06CC \\u0631\\u0645\\u0632\"));\n};\n\nexport default withRouter(Changepassword);","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/components/pages/changepassword/changepassword.js"],"names":["React","useState","ReCAPTCHA","Link","withRouter","Spiner","Changepassword","props","username","setusername","password","setpassword","errors","seterrors","recaptcha","setRecaptcha","showspiner","setShowspiner","url","window","location","pathname","curenturl","slice","mail","event","target","value","pass","recaptchastate","gohome","history","replace","changepass","indexOf","length","fetch","method","headers","body","JSON","stringify","email","token","then","response","data","json","statuse","status","message","catch","error","console","display"],"mappings":"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","sourcesContent":["import React, {useState } from 'react';\r\nimport './changepassword.css';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { Link } from 'react-router-dom';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Spiner from './../../spinner/spinner';\r\nconst Changepassword=(props)=>{\r\n    const [username, setusername] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [errors, seterrors] = useState('');\r\n    const [recaptcha,setRecaptcha]=useState('');\r\n    const [showspiner,setShowspiner]=useState(false);\r\n    const url=window.location.pathname;\r\n  const curenturl= url.slice(16);\r\n    const mail=(event)=>{\r\n        setusername(event.target.value)\r\n    }\r\n    const pass=(event)=>{\r\n        setpassword(event.target.value)\r\n    }\r\n    const recaptchastate=()=>{\r\n\r\n      setRecaptcha(true)\r\n      \r\n     }\r\n    const gohome=()=>{\r\n        props.history.replace('/')\r\n    }\r\n    const changepass=()=>{\r\nif(username.indexOf('.com')==-1 ||username.indexOf('@')==-1 ){\r\n    seterrors('فرمت ایمیل نامعتبر است')\r\n  \r\n}else if(password.length < 5){\r\n    seterrors('تعدادارقام پسوورد نباید کمتر از 5باشد')\r\n\r\n}else if(recaptcha==false){\r\n\r\n}\r\nelse{\r\n    return(\r\n  setShowspiner(true),\r\n        fetch('http://localhost:3000/auth/password/reset',{\r\n                 method:'POST',\r\n                 headers:{\r\n                   'Accept':'application/json',\r\n                   'Content-Type': 'application/x-www-form-urlencoded'\r\n                 },\r\n                 body:JSON.stringify(\r\n                 {\r\n                     email:username,\r\n                     password:password,\r\n                     token:curenturl\r\n            \r\n                   }\r\n                  )\r\n               })  \r\n                .then(async (response)=>{\r\n                 const data = await response.json();\r\n                 const statuse=await response.status;\r\n            \r\n               if(statuse == 200){\r\n                setShowspiner(false)\r\n             gohome()\r\n            \r\n            \r\n               }else if(statuse == 400){\r\n                seterrors(data.message)\r\n                setShowspiner(false)\r\n               }else if(statuse == 500){\r\n                setShowspiner(false)\r\n                seterrors('خطادر ارتباط با سرور')\r\n               }\r\n               }\r\n              \r\n              )\r\n               .catch((error)=>{console.error(error)})\r\n               )\r\n            }\r\n    }\r\n    return(\r\n        <div className=\"mainreset\">\r\n<div className=\"error\" style={{display:errors.length<1?'none':'',}}>\r\n{errors}\r\n</div>\r\n<text>\r\n{curenturl}\r\n</text>\r\n\r\n     <input type=\"email\" placeholder=\"ایمیل\" onChange={mail} />\r\n     <input type=\"password\" placeholder=\"پسوورد\" onChange={pass} />\r\n    <div className=\"recaptcha\">\r\n    <ReCAPTCHA\r\n    hl={\"fa\"}\r\n    sitekey=\"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\"\r\n    onChange={recaptchastate}\r\n  />\r\n </div>\r\n <div style={{display:showspiner}}>\r\n   <Spiner/>\r\n </div>\r\n<button onClick={changepass} >\r\nبازیابی رمز\r\n</button>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(Changepassword);"]},"metadata":{},"sourceType":"module"}