{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\components\\\\pages\\\\changepassword\\\\changepassword.js\";\nimport React, { useState, useContext } from 'react';\nimport './changepassword.css';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { withRouter } from 'react-router-dom';\nimport Spiner from './../../spinner/spinner';\nimport { Stufflistcontext } from './../../../context/stufflistcontext';\n\nconst Changepassword = props => {\n  const [username, setusername] = useState('');\n  const [password, setpassword] = useState('');\n  const [errors, seterrors] = useState('');\n  const [recaptcha, setRecaptcha] = useState('');\n  const [showspiner, setShowspiner] = useState(false);\n  const {\n    changesearchbar\n  } = useContext(Stufflistcontext);\n  const url = window.location.pathname;\n  useEffect(() => {\n    changesearchbar(false);\n  }, []);\n  const curenturl = url.slice(16);\n\n  const mail = event => {\n    setusername(event.target.value);\n  };\n\n  const pass = event => {\n    setpassword(event.target.value);\n  };\n\n  const recaptchastate = () => {\n    setRecaptcha(true);\n  };\n\n  const gohome = () => {\n    props.history.replace('/');\n  };\n\n  const changepass = () => {\n    if (username.indexOf('.com') == -1 || username.indexOf('@') == -1) {\n      seterrors('فرمت ایمیل نامعتبر است');\n    } else if (password.length < 5) {\n      seterrors('تعدادارقام پسوورد نباید کمتر از 5باشد');\n    } else if (recaptcha == false) {} else {\n      return setShowspiner(true), fetch('http://localhost:3000/auth/password/reset', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password,\n          token: curenturl\n        })\n      }).then(async response => {\n        const data = await response.json();\n        const statuse = await response.status;\n\n        if (statuse == 200) {\n          setShowspiner(false);\n          gohome();\n        } else if (statuse == 400) {\n          seterrors(data.message);\n          setShowspiner(false);\n        } else if (statuse == 500) {\n          setShowspiner(false);\n          seterrors('خطادر ارتباط با سرور');\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"mainreset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"changepassworderror\",\n    style: {\n      display: errors.length < 1 ? 'none' : ''\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, errors), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\",\n    onChange: mail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"\\u067E\\u0633\\u0648\\u0648\\u0631\\u062F\",\n    onChange: pass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"hangepasscarecaptcha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(ReCAPTCHA, {\n    hl: \"fa\",\n    sitekey: \"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\",\n    onChange: recaptchastate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      display: showspiner ? 'flex' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Spiner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: changepass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"\\u0628\\u0627\\u0632\\u06CC\\u0627\\u0628\\u06CC \\u0631\\u0645\\u0632\"));\n};\n\nexport default withRouter(Changepassword);","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/components/pages/changepassword/changepassword.js"],"names":["React","useState","useContext","ReCAPTCHA","withRouter","Spiner","Stufflistcontext","Changepassword","props","username","setusername","password","setpassword","errors","seterrors","recaptcha","setRecaptcha","showspiner","setShowspiner","changesearchbar","url","window","location","pathname","useEffect","curenturl","slice","mail","event","target","value","pass","recaptchastate","gohome","history","replace","changepass","indexOf","length","fetch","method","headers","body","JSON","stringify","token","then","response","data","json","statuse","status","message","catch","error","console","display"],"mappings":"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","sourcesContent":["import React, {useState,useContext, } from 'react';\r\nimport './changepassword.css';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport Spiner from './../../spinner/spinner';\r\nimport {Stufflistcontext} from './../../../context/stufflistcontext';\r\nconst Changepassword=(props)=>{\r\n  const [username, setusername] = useState('');\r\n  const [password, setpassword] = useState('');\r\n  const [errors, seterrors] = useState('');\r\n  const [recaptcha,setRecaptcha]=useState('');\r\n  const [showspiner,setShowspiner]=useState(false);\r\n  const {changesearchbar}=useContext(Stufflistcontext)\r\n  const url=window.location.pathname;\r\n  useEffect(() => {\r\n    changesearchbar(false)\r\n  }, [])\r\n  const curenturl= url.slice(16);\r\n  const mail=(event)=>{\r\n    setusername(event.target.value)\r\n  }\r\n  const pass=(event)=>{\r\n    setpassword(event.target.value)\r\n  }\r\n  const recaptchastate=()=>{\r\n    \r\n    setRecaptcha(true)\r\n    \r\n  }\r\n  const gohome=()=>{\r\n    props.history.replace('/')\r\n  }\r\n  const changepass=()=>{\r\n    if(username.indexOf('.com')==-1 ||username.indexOf('@')==-1 ){\r\n      seterrors('فرمت ایمیل نامعتبر است')\r\n      \r\n    }else if(password.length < 5){\r\n      seterrors('تعدادارقام پسوورد نباید کمتر از 5باشد')\r\n      \r\n    }else if(recaptcha==false){\r\n      \r\n    }\r\n    else{\r\n      return(\r\n        setShowspiner(true),\r\n        fetch('http://localhost:3000/auth/password/reset',{\r\n        method:'POST',\r\n        headers:{\r\n          'Accept':'application/json',\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body:JSON.stringify(\r\n          {\r\n            username:username,\r\n            password:password,\r\n            token:curenturl\r\n            \r\n          }\r\n          )\r\n        })  \r\n        .then(async (response)=>{\r\n          const data = await response.json();\r\n          const statuse=await response.status;\r\n          \r\n          if(statuse == 200){\r\n            setShowspiner(false)\r\n            gohome()\r\n            \r\n            \r\n          }else if(statuse == 400){\r\n            seterrors(data.message)\r\n            setShowspiner(false)\r\n          }else if(statuse == 500){\r\n            setShowspiner(false)\r\n            seterrors('خطادر ارتباط با سرور')\r\n          }\r\n        }\r\n        \r\n        )\r\n        .catch((error)=>{console.error(error)})\r\n        )\r\n      }\r\n    }\r\n    return(\r\n      <div className=\"mainreset\">\r\n      <div className=\"changepassworderror\" style={{display:errors.length<1?'none':'',}}>\r\n      {errors}\r\n      </div>\r\n      \r\n      \r\n      <input type=\"email\" placeholder=\"ایمیل\" onChange={mail} />\r\n      <input type=\"password\" placeholder=\"پسوورد\" onChange={pass} />\r\n      <div className=\"hangepasscarecaptcha\">\r\n      <ReCAPTCHA\r\n      hl={\"fa\"}\r\n      sitekey=\"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\"\r\n      onChange={recaptchastate}\r\n      />\r\n      </div>\r\n      <div style={{display:showspiner?'flex':'none'}}>\r\n      <Spiner/>\r\n      </div>\r\n      <button onClick={changepass} >\r\n      بازیابی رمز\r\n      </button>\r\n      </div>\r\n      )\r\n    }\r\n    export default withRouter(Changepassword);"]},"metadata":{},"sourceType":"module"}