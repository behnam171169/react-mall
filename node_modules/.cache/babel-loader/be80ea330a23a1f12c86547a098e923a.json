{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\components\\\\Modal\\\\Modal.js\";\nimport React, { Component, useState, useContext } from 'react';\nimport './Modal.css';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { mainContext } from './../../context/mainContext';\nimport { Stufflistcontext } from './../../context/stufflistcontext';\nimport Spiner from './../spinner/spinner';\n\nconst Modal = props => {\n  const {\n    admin\n  } = useContext(mainContext);\n  const {\n    modal,\n    changemodal\n  } = useContext(Stufflistcontext);\n  const [username, setusername] = useState('');\n  const [password, setpassword] = useState('');\n  const [errors, seterrors] = useState('');\n  const [showerror, setshowerror] = useState('none');\n  const [recaptcha, setRecaptcha] = useState(false);\n  const [showspiner, setShowspiner] = useState(false);\n\n  const closemodal = () => {\n    changemodal(false);\n  };\n\n  const recaptchastate = () => {\n    setRecaptcha(true);\n  };\n\n  const pass = event => {\n    setpassword(event.target.value);\n  };\n\n  const mail = event => {\n    setusername(event.target.value);\n  };\n\n  const gohome = () => {\n    props.history.push('/');\n  };\n\n  const reset = () => {\n    props.history.push('/reset');\n    props.closemodal();\n  };\n\n  const login = () => {\n    let err = [];\n\n    if (username.length < 1 || password.length < 1) {\n      err.push(\"لطفا همه فیلد ها را پر کنید\");\n      setshowerror('flex');\n      seterrors(err);\n    } else if (password.length < 5) {\n      err.push(\"تعداد ارقام پسورد حداقل پنج رقم می باشد\");\n      setshowerror('flex');\n      seterrors(err);\n    } else if (username.indexOf('@') == -1 || username.indexOf('.') == -1) {\n      err.push(\"فرمت ایمیل معتبر نمی باشد\");\n      setshowerror('flex');\n      seterrors(err);\n    } else if (recaptcha == false) {\n      err.push(\"گزینه امنتی را فعال کنید\");\n      setshowerror('flex');\n      seterrors(err);\n    } else {\n      seterrors('');\n      setshowerror('none');\n      return setShowspiner(true), fetch('http://localhost:3000/auth/login', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password,\n          check: recaptcha\n        })\n      }).then(async response => {\n        const data = await response.json();\n        const statuse = await response.status;\n\n        if (statuse == 200) {\n          setShowspiner(false);\n          localStorage.setItem('user', data.userid);\n          localStorage.setItem('admin', data.admin);\n          localStorage.setItem('token', data.token);\n          gohome(); // close()\n\n          closemodal();\n          window.location.reload();\n          setshowerror('none');\n          console.log('kk66');\n        } else if (statuse == 400) {\n          setShowspiner(false);\n          seterrors(data.message);\n          setshowerror('flex');\n        } else if (statuse == 500) {\n          setShowspiner(false);\n          seterrors('خطادر ارتباط با سرور');\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: modal ? 'flex' : 'none'\n    },\n    onClick: closemodal,\n    className: \"Backdropmenu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Modal\",\n    style: {\n      transform: modal ? 'translateX(0)' : 'translateX(-100vw)',\n      opacity: modal ? '1' : '0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"errorse\",\n    style: {\n      display: showerror\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"text\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, errors)), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"username\",\n    onChange: mail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"password\",\n    onChange: pass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(ReCAPTCHA, {\n    hl: \"fa\",\n    sitekey: \"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\",\n    onChange: recaptchastate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), \",\", React.createElement(\"div\", {\n    style: {\n      display: showspiner ? 'flex' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Spiner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      display: 'bluck',\n      marginBottom: 30,\n      marginTop: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: login,\n    style: {\n      marginRight: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"\\u0648\\u0631\\u0648\\u062F\"), React.createElement(Link, {\n    onClick: reset,\n    className: \"apassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"\\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631 \\u062E\\u0648\\u062F \\u0631\\u0627 \\u0641\\u0631\\u0627\\u0645\\u0648\\u0634 \\u06A9\\u0631\\u062F\\u0647 \\u0627\\u0645\")), React.createElement(\"span\", {\n    style: {\n      marginRight: 15,\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"\\u06A9\\u0627\\u0631\\u0628\\u0631 \\u062C\\u062F\\u06CC\\u062F \\u0647\\u0633\\u062A\\u06CC\\u062F\\u061F\", React.createElement(Link, {\n    style: {\n      color: '#F79F1F'\n    },\n    onClick: closemodal,\n    to: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"\\u062B\\u0628\\u062A \\u0646\\u0627\\u0645\"), \" \\u06A9\\u0646\\u06CC\\u062F \")));\n};\n\nexport default withRouter(Modal);","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/components/Modal/Modal.js"],"names":["React","Component","useState","useContext","Link","withRouter","ReCAPTCHA","mainContext","Stufflistcontext","Spiner","Modal","props","admin","modal","changemodal","username","setusername","password","setpassword","errors","seterrors","showerror","setshowerror","recaptcha","setRecaptcha","showspiner","setShowspiner","closemodal","recaptchastate","pass","event","target","value","mail","gohome","history","push","reset","login","err","length","indexOf","fetch","method","headers","body","JSON","stringify","check","then","response","data","json","statuse","status","localStorage","setItem","userid","token","window","location","reload","console","log","message","catch","error","display","transform","opacity","marginBottom","marginTop","marginRight","color"],"mappings":"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","sourcesContent":["import React, { Component,useState,useContext } from 'react';\r\nimport './Modal.css';\r\nimport {Link} from 'react-router-dom';\r\nimport {withRouter} from 'react-router-dom';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport {mainContext} from './../../context/mainContext';\r\nimport {Stufflistcontext} from './../../context/stufflistcontext';\r\nimport Spiner from './../spinner/spinner';\r\nconst Modal=(props)=>{\r\n  const {admin}=useContext(mainContext)\r\n  const {modal,changemodal}=useContext(Stufflistcontext)\r\n  const [username, setusername] = useState('');\r\n  const [password, setpassword] = useState('');\r\n  const [errors, seterrors] = useState('');\r\n  const [showerror,setshowerror]=useState('none');\r\n  const [recaptcha,setRecaptcha]=useState(false);\r\n  const [showspiner,setShowspiner]=useState(false);\r\n  const  closemodal=()=>{\r\n    changemodal(false)\r\n  }\r\n  const recaptchastate=()=>{\r\n    setRecaptcha(true)\r\n  }\r\n  const pass=(event)=>{\r\n    setpassword(event.target.value)\r\n  }\r\n  const mail=(event)=>{\r\n    setusername(event.target.value)\r\n  }\r\n  \r\n\r\n  const gohome=()=>{\r\n    props.history.push('/');\r\n  }\r\n  \r\n  const reset=()=>{\r\n    props.history.push('/reset');\r\n    props.closemodal();\r\n  }\r\n  const login=()=>{\r\n    let err=[];\r\n    if(username.length<1 || password.length<1){\r\n      err.push(\"لطفا همه فیلد ها را پر کنید\");\r\n      setshowerror('flex')\r\n      seterrors(err)\r\n    }else if(password.length<5){\r\n      err.push(\"تعداد ارقام پسورد حداقل پنج رقم می باشد\");\r\n      setshowerror('flex')\r\n      seterrors(err)\r\n    }else if(username.indexOf('@')== -1 || username.indexOf('.')== -1){\r\n      err.push(\"فرمت ایمیل معتبر نمی باشد\");\r\n      setshowerror('flex')\r\n      seterrors(err)\r\n    }\r\n    else if(recaptcha == false){\r\n      err.push(\"گزینه امنتی را فعال کنید\");\r\n      setshowerror('flex')\r\n      seterrors(err)\r\n    }\r\n    else{\r\n      seterrors('')\r\n      setshowerror('none')\r\n      return(\r\n        setShowspiner(true),\r\n        fetch('http://localhost:3000/auth/login',{\r\n        method:'POST',\r\n        headers:{\r\n          'Accept':'application/json',\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body:JSON.stringify(\r\n          {\r\n            username:username,\r\n            \r\n            password:password,\r\n            check:recaptcha\r\n            \r\n          }\r\n          )\r\n        })   .then(async (response)=>{\r\n          const data = await response.json();\r\n          const statuse=await response.status;\r\n          if(statuse == 200){\r\n            setShowspiner(false)\r\n            localStorage.setItem('user',data.userid)\r\n            localStorage.setItem('admin',data.admin)\r\n            localStorage.setItem('token', data.token)\r\n            gohome() \r\n            // close()\r\n            closemodal()\r\n            window.location.reload()\r\n            setshowerror('none')\r\n            console.log('kk66')\r\n          }else if(statuse == 400){\r\n            setShowspiner(false)\r\n            seterrors(data.message)\r\n            setshowerror('flex')\r\n          }else if(statuse==500){\r\n            setShowspiner(false)\r\n            seterrors('خطادر ارتباط با سرور')\r\n          }\r\n        }\r\n        \r\n        )\r\n        .catch((error)=>{console.error(error)})\r\n        )\r\n      }\r\n    }\r\n    return(\r\n      <React.Fragment>\r\n      <div style={{display:modal?'flex':'none'}}  onClick={closemodal} className=\"Backdropmenu\">\r\n      \r\n      </div>\r\n      <div className=\"Modal\"\r\n      style={{transform:modal?'translateX(0)':'translateX(-100vw)',\r\n      opacity:modal?'1':'0'\r\n    }}\r\n    >\r\n    <div className=\"errorse\" style={{display:showerror}}>\r\n    <text>{errors}</text>\r\n    </div>\r\n    \r\n    <input type=\"text\" placeholder=\"username\"  onChange={mail}/>\r\n    <input type=\"password\" placeholder=\"password\" onChange={pass} />\r\n    <ReCAPTCHA\r\n    hl={\"fa\"}\r\n    sitekey=\"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\"\r\n    onChange={recaptchastate}\r\n    />,\r\n    <div style={{display:showspiner?'flex':'none'}}>\r\n    <Spiner/>\r\n    </div>\r\n    \r\n    <div style={{display:'bluck',marginBottom:30,marginTop:15}}>\r\n    <button onClick={login} style={{marginRight:30}}>\r\n    ورود\r\n    </button>\r\n    \r\n    \r\n    <Link onClick={reset} className=\"apassword\">\r\n    رمز عبور خود را فراموش کرده ام\r\n    </Link>\r\n    </div>\r\n    \r\n    \r\n    <span style={{marginRight:15,color:'white'}}>کاربر جدید هستید؟\r\n    <Link style={{color:'#F79F1F'}} onClick={closemodal}  to=\"/register\" >ثبت نام</Link> کنید </span>\r\n    </div>\r\n    \r\n    \r\n    </React.Fragment>\r\n    \r\n    \r\n    )\r\n  }\r\n  export default withRouter(Modal);\r\n  \r\n  "]},"metadata":{},"sourceType":"module"}