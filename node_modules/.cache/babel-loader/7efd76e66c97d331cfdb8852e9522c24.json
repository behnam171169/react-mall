{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\components\\\\pages\\\\resetpassword\\\\resetpassword.js\";\nimport React, { useState } from 'react';\nimport './resetpassword.css';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { Link } from 'react-router-dom';\n\nconst Resetpassword = props => {\n  const [username, setusername] = useState('');\n  const [errors, seterrors] = useState('');\n  const [showerror, setshowerror] = useState('none');\n  const [recaptcha, setRecaptcha] = useState('');\n\n  const mail = event => {\n    setusername(event.target.value);\n  };\n\n  const recaptchastate = () => {\n    setRecaptcha(true);\n  };\n\n  const reset = () => {\n    if (username.indexOf('@.yahoo.com') == -1 || username.indexOf('@gmail.com') == -1) return fetch('http://localhost:3000/auth/login', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify({\n        email: username,\n        password: password,\n        check: check\n      })\n    }).then(async response => {\n      const data = await response.json();\n      const statuse = await response.status;\n\n      if (statuse == 200) {\n        console.log(data);\n        gohome();\n        setshowerror('none');\n      } else if (statuse == 400) {\n        seterrors(data.message);\n        setshowerror('flex');\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"mainreset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"error\",\n    style: {\n      display: errors.length < 1 ? 'none' : ''\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, errors), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\",\n    onChange: mail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"recaptcha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(ReCAPTCHA, {\n    hl: \"fa\",\n    sitekey: \"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\",\n    onChange: recaptchastate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"\\u062A\\u063A\\u06CC\\u06CC\\u0631 \\u0631\\u0645\\u0632\"));\n};\n\nexport default Resetpassword;","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/components/pages/resetpassword/resetpassword.js"],"names":["React","useState","ReCAPTCHA","Link","Resetpassword","props","username","setusername","errors","seterrors","showerror","setshowerror","recaptcha","setRecaptcha","mail","event","target","value","recaptchastate","reset","indexOf","fetch","method","headers","body","JSON","stringify","email","password","check","then","response","data","json","statuse","status","console","log","gohome","message","catch","error","display","length"],"mappings":"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","sourcesContent":["import React, {useState } from 'react';\r\nimport './resetpassword.css';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Resetpassword=(props)=>{\r\n    const [username, setusername] = useState('');\r\n    const [errors, seterrors] = useState('');\r\n    const [showerror,setshowerror]=useState('none')\r\n    const [recaptcha,setRecaptcha]=useState('');\r\n    const mail=(event)=>{\r\n        setusername(event.target.value)\r\n    }\r\n    const recaptchastate=()=>{\r\n      setRecaptcha(true)\r\n     }\r\n     const reset=()=>{\r\n         if(username.indexOf('@.yahoo.com')==-1 ||username.indexOf('@gmail.com')==-1 )\r\n        return(\r\n            fetch('http://localhost:3000/auth/login',{\r\n                     method:'POST',\r\n                     headers:{\r\n                       'Accept':'application/json',\r\n                       'Content-Type': 'application/x-www-form-urlencoded'\r\n                     },\r\n                     body:JSON.stringify(\r\n                     {\r\n                         email:username,\r\n                          password:password,\r\n                          check:check\r\n                       }\r\n                      )\r\n                   })   .then(async (response)=>{\r\n                     const data = await response.json();\r\n                     const statuse=await response.status;\r\n                   if(statuse == 200){\r\n                     console.log(data)\r\n                  gohome()\r\n                  setshowerror('none')\r\n                \r\n                   }else if(statuse == 400){\r\n                    seterrors(data.message)\r\n                    setshowerror('flex')\r\n                   }\r\n                   }\r\n                  \r\n                  )\r\n                   .catch((error)=>{console.error(error)})\r\n                   )\r\n     }\r\n    return(\r\n        <div className=\"mainreset\">\r\n<div className=\"error\" style={{display:errors.length<1?'none':'',}}>\r\n{errors}\r\n</div>\r\n     <input type=\"email\" placeholder=\"ایمیل\" onChange={mail} />\r\n    <div className=\"recaptcha\">\r\n    <ReCAPTCHA\r\n    hl={\"fa\"}\r\n    sitekey=\"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\"\r\n    onChange={recaptchastate}\r\n  />\r\n </div>\r\n<button onClick={reset}>\r\n تغییر رمز\r\n</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Resetpassword;"]},"metadata":{},"sourceType":"module"}