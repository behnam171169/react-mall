{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\components\\\\pages\\\\login\\\\login.js\";\nimport React, { Component, useState } from 'react';\nimport './login.css';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { Link } from 'react-router-dom';\n\nconst Login = props => {\n  const [username, setusername] = useState('');\n  const [password, setpassword] = useState('');\n  const [errors, seterrors] = useState('');\n  const [showerror, setshowerror] = useState('none');\n  const [recaptcha, setRecaptcha] = useState(false);\n\n  const pass = event => {\n    setpassword(event.target.value);\n  };\n\n  const mail = event => {\n    setusername(event.target.value);\n  };\n\n  const recaptchastate = () => {\n    setRecaptcha(true);\n  };\n\n  const gohome = () => {\n    props.history.push('/');\n  };\n\n  const goregister = () => {\n    props.history.push('/register');\n  };\n\n  const login = props => {\n    let err = [];\n\n    if (username.length < 1 || password.length < 1) {\n      err.push(\"لطفا همه فیلد ها را پر کنید\");\n      setshowerror('flex');\n      seterrors(err);\n    } else if (password.length < 5) {\n      err.push(\"تعداد ارقام پسورد حداقل پنج رقم می باشد\");\n      setshowerror('flex');\n      seterrors(err);\n    } else if (username.indexOf('@') == -1 || username.indexOf('.') == -1) {\n      err.push(\"فرمت ایمیل معتبر نمی باشد\");\n      setshowerror('flex');\n      seterrors(err);\n    } else if (recaptcha == false) {\n      err.push(\"گزینه امنتی را فعال کنید\");\n      seterrors(err);\n    } else {\n      seterrors('');\n      setshowerror('none');\n      return fetch('http://localhost:3000/auth/login', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: JSON.stringify({\n          email: username,\n          password: password\n        })\n      }).then(async response => {\n        const data = await response.json();\n        const statuse = await response.status;\n\n        if (statuse == 200) {\n          gohome();\n          setshowerror('none');\n          console.log('kk66');\n        } else if (statuse == 400) {\n          seterrors(data.message);\n          setshowerror('flex');\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"mainlogin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"error\",\n    style: {\n      display: errors.length < 1 ? 'none' : ''\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, errors), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\",\n    onChange: mail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"\\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631\",\n    onChange: pass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"recaptcha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(ReCAPTCHA, {\n    hl: \"fa\",\n    sitekey: \"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\",\n    onChange: recaptchastate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    cl: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"text\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"\\u0645\\u0631\\u0627 \\u0628\\u0647 \\u062E\\u0627\\u0637\\u0631 \\u0628\\u0633\\u067E\\u0627\\u0631\"), React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"remember\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    onClick: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"\\u0648\\u0631\\u0648\\u062F\"), React.createElement(\"text\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"\\u06A9\\u0627\\u0631\\u0628\\u0631 \\u062C\\u062F\\u06CC\\u062F \\u0647\\u0633\\u062A\\u06CC\\u062F\", React.createElement(Link, {\n    onClick: goregister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"\\u062B\\u0628\\u062A \\u0646\\u0627\\u0645 \\u06A9\\u0646\\u06CC\\u062F\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/wamp64/www/my-app/src/components/pages/login/login.js"],"names":["React","Component","useState","ReCAPTCHA","Link","Login","props","username","setusername","password","setpassword","errors","seterrors","showerror","setshowerror","recaptcha","setRecaptcha","pass","event","target","value","mail","recaptchastate","gohome","history","push","goregister","login","err","length","indexOf","fetch","method","headers","body","JSON","stringify","email","then","response","data","json","statuse","status","console","log","message","catch","error","display"],"mappings":"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","sourcesContent":["import React, { Component,useState } from 'react'\r\nimport './login.css';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Login=(props)=>{\r\n    const [username, setusername] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [errors, seterrors] = useState('');\r\n    const [showerror,setshowerror]=useState('none')\r\n    const [recaptcha,setRecaptcha]=useState(false);\r\n    const pass=(event)=>{\r\n        setpassword(event.target.value)\r\n    }\r\n    const mail=(event)=>{\r\n        setusername(event.target.value)\r\n    }\r\n    const recaptchastate=()=>{\r\n      setRecaptcha(true)\r\n     }\r\n     const gohome=()=>{\r\n \r\n      props.history.push('/');\r\n         }\r\n        const goregister=()=>{\r\n          props.history.push('/register');\r\n        }\r\n    const login=(props)=>{\r\n        let err=[];\r\n        if(username.length<1 || password.length<1){\r\n   err.push(\"لطفا همه فیلد ها را پر کنید\");\r\n   setshowerror('flex')\r\nseterrors(err)\r\n        }else if(password.length<5){\r\n          err.push(\"تعداد ارقام پسورد حداقل پنج رقم می باشد\");\r\n          setshowerror('flex')\r\n          seterrors(err)\r\n        }else if(username.indexOf('@')== -1 || username.indexOf('.')== -1){\r\n          err.push(\"فرمت ایمیل معتبر نمی باشد\");\r\n          setshowerror('flex')\r\n          seterrors(err)\r\n        }\r\n        else if(recaptcha == false){\r\n         err.push(\"گزینه امنتی را فعال کنید\");\r\n         seterrors(err)\r\n       }\r\n       else{\r\n        seterrors('')\r\n        setshowerror('none')\r\n        return(\r\n            fetch('http://localhost:3000/auth/login',{\r\n                     method:'POST',\r\n                     headers:{\r\n                       'Accept':'application/json',\r\n                       'Content-Type': 'application/x-www-form-urlencoded'\r\n                     },\r\n                     body:JSON.stringify(\r\n                     {\r\n                         email:username,\r\n                          password:password \r\n                       }\r\n                      )\r\n                   })   .then(async (response)=>{\r\n                     const data = await response.json();\r\n                     const statuse=await response.status;\r\n                   if(statuse == 200){\r\n                  gohome()\r\n                  setshowerror('none')\r\n                    console.log('kk66')\r\n                   }else if(statuse == 400){\r\n                    seterrors(data.message)\r\n                    setshowerror('flex')\r\n                   }\r\n                   }\r\n                  \r\n                  )\r\n                   .catch((error)=>{console.error(error)})\r\n                   )\r\n                }\r\n    }\r\n    return(\r\n        <div className=\"mainlogin\">\r\n<div className=\"error\" style={{display:errors.length<1?'none':'',}}>\r\n{errors}\r\n</div>\r\n     <input type=\"email\" placeholder=\"ایمیل\" onChange={mail} />\r\n    <input type=\"password\" placeholder=\"رمز عبور\" onChange={pass} />\r\n \r\n    <div className=\"recaptcha\">\r\n    <ReCAPTCHA\r\n    hl={\"fa\"}\r\n    sitekey=\"6LcdfOUUAAAAAFGXuwyP37TpZSyQpHHGxE28WGYo\"\r\n    onChange={recaptchastate}\r\n  />\r\n </div>\r\n <div className=\"checkbox\">\r\n   <div cl>\r\n   <text>مرا به خاطر بسپار</text>\r\n <input type=\"checkbox\" name=\"remember\" />\r\n   </div>\r\n\r\n\r\n </div>\r\n\r\n<button onClick={login}>\r\n  ورود\r\n</button>\r\n\r\n    <text>کاربر جدید هستید<Link onClick={goregister}>ثبت نام کنید</Link></text>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}